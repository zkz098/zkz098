{
    "version": "https://jsonfeed.org/version/1",
    "title": "望月阁",
    "subtitle": "kaitaku",
    "icon": "https://www.kaitaku.xyz/images/favicon.ico",
    "description": "一个萌新的学习笔记",
    "home_page_url": "https://www.kaitaku.xyz",
    "items": [
        {
            "id": "https://www.kaitaku.xyz/python/easy/pythonexe/",
            "url": "https://www.kaitaku.xyz/python/easy/pythonexe/",
            "title": "python打包exe-pyinstaller和nuitka",
            "date_published": "2022-06-01T05:15:31.000Z",
            "content_html": "<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>python 的编写十分简单，而且 linux 内置 python 解释器，无需额外安装<br />\n但 windows 系统需要手动安装 python 解释器，一般来说会提高用户上手难度<br />\n本文会介绍两种 python 文件打包为 exe 的方式</p>\n<h1 id=\"pyinstaller\"><a class=\"anchor\" href=\"#pyinstaller\">#</a> pyinstaller</h1>\n<h2 id=\"基础操作\"><a class=\"anchor\" href=\"#基础操作\">#</a> 基础操作</h2>\n<p>pyinstaller 是最常见的 python 文件打包器，也是最易于使用的<br />\n先使用 pip 安装:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> pyinstaller</pre></td></tr></table></figure><p>然后 cd 到你的 python 项目目录下，本次使用作者的网络工具箱测试:</p>\n<div class=\"note info\">\n<p>工具箱包含了 requests、os、socket 等库，大约 300 行左右</p>\n</div>\n<p>假设这个文件为 <code>main.py</code> , 下面进行打包:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pyinstaller -c main.py</pre></td></tr></table></figure><p>随后开始漫长的打包，等到出现:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>XXXXX INFO: Building COLLECT COLLECT-00.toc completed successfully.</pre></td></tr></table></figure><p>打包就完成了，可以前往 dist 文件夹下查看 <code>main.exe</code></p>\n<h2 id=\"进阶玩法\"><a class=\"anchor\" href=\"#进阶玩法\">#</a> 进阶玩法</h2>\n<h3 id=\"打包成单个exe\"><a class=\"anchor\" href=\"#打包成单个exe\">#</a> 打包成单个 exe</h3>\n<p>刚刚打包出来的文件是一个文件夹，还需要二次压缩，可以变更一下指令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pyinstaller -F -c main.py</pre></td></tr></table></figure><p>这样打包出来的就是一个 exe 文件了，体积会大一点</p>\n<h3 id=\"upx压缩\"><a class=\"anchor\" href=\"#upx压缩\">#</a> upx 压缩</h3>\n<p>前往<span class=\"exturl\" data-url=\"aHR0cHM6Ly91cHguZ2l0aHViLmlvLw==\"> upx 官网</span> 下载 upx, 将 <code>upx.exe</code>  放在项目目录下<br />\n然后执行 <code>pyinstaller -F -c main.py</code>  即可</p>\n<div class=\"note info\">\n<p>upx 压缩后占用空间会小很多，但执行速度会慢一点 <br />\n如果使用 numpy 等底层为 C 的第三方库，请不要使用 upx</p>\n</div>\n<h1 id=\"nuitka\"><a class=\"anchor\" href=\"#nuitka\">#</a> nuitka</h1>\n<p>pyinstaller 打包十分简便，但也存在以下问题:</p>\n<ul>\n<li>python 本身执行速度就很慢</li>\n<li>执行速度较慢，比 python 还慢</li>\n<li>反编译非常容易<span class=\"spoiler\" title=\"你知道得太多了\">一条龙 pyinstaller 反编译产业链了属于是</span></li>\n</ul>\n<p>而本次的 <code>nuitka</code>  便可以解决上述的问题，它的会先将 python 文件转成 C<ins> 代码，随后进行编译 <br />\n这就让 <code>nuitka</code>  编译出的文件具有 C</ins> 的速度和反反编译能力 \\</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>先安装 nuitka:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> nuitka</pre></td></tr></table></figure><p>然后安装<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JyZWNodHNhbmRlcnMvd2lubGlic19taW5ndy9yZWxlYXNlcy90YWcvMTIuMS4wLTEwLjAuMC1tc3ZjcnQtcjE=\"> winlibs</span><br />\n 注意事项:</p>\n<ul>\n<li>i686=32 位，x86_64=64 位</li>\n<li>选择 7z 结尾的文件</li>\n<li>如果太慢了，可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2V5eS5jbi9naC1wcm94eS8=\"> moeyy 的 github 加速</span> 进行加速</li>\n</ul>\n<div class=\"note info\">\n<p>感谢 moeyy 提供的 github 加速服务</p>\n</div>\n<p>然后将这个文件夹放在任意位置，自行添加 path 到 <code>mingw64\\bin</code>  目录<br />\n输入 <code>gcc --version</code> , 如果有正常输出，就是成功了</p>\n<h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<p>打开你的项目文件，运行下列命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nuitka --mingw64 --standalone --show-progress --show-memory --output-dir<span class=\"token operator\">=</span>out main.py</pre></td></tr></table></figure><p>选项的用途:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">--mingw64</td>\n<td style=\"text-align:center\">指定 mingw64 编译器编译，默认为 msvc</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--standalone</td>\n<td style=\"text-align:center\">指定独立环境运行，不然无法独立运行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--show-progress</td>\n<td style=\"text-align:center\">显示编译进度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--show-memory</td>\n<td style=\"text-align:center\">显示占用内存</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--output-dir</td>\n<td style=\"text-align:center\">指定输出目录</td>\n</tr>\n</tbody>\n</table>\n<p>随后，你的终端会和这个一样:<br />\n<img data-src=\"https://static.aichat.net/chat/202206/454346ba-e5fa-49cc-8418-fe0cb9c6cf1f.png\" alt=\"image.png\" /><br />\n 在这里会弹出来一个选择，问你需不需要 ccache 进行加速，如果你的网络环境良好 (github 下载 2MB/S 以上) 可以输入 yes, 反之选 no</p>\n<div class=\"note info\">\n<p>如果不是 ccache 可以参考第一步重新下载 winlibs</p>\n</div>\n<p>选择过后:<br />\n<img data-src=\"https://static.aichat.net/chat/202206/bc433154-3802-4727-823e-f6ac805184ca.png\" alt=\"image.png\" /><br />\n 还会弹出一个选项，应该是 DLL 分析的，选 YES<br />\n 随后等一段时间，编译就完成了，可以到 <code>out/main.dist</code>  下找到 EXE 文件</p>\n<div class=\"note info\">\n<p>nuitka 打包大项目还有其他选项，下一篇再细说</p>\n</div>\n",
            "tags": [
                "python",
                "基础篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/webbuild/shokapatch/",
            "url": "https://www.kaitaku.xyz/webbuild/shokapatch/",
            "title": "shoka主题-对shoka主题的小修小补",
            "date_published": "2022-05-30T11:58:57.000Z",
            "content_html": "<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>最近摸了一个月鱼没有更新什么正经文章，基本都是 shoka 的改造<br />\n近期在<span class=\"spoiler\" title=\"你知道得太多了\">摸鱼</span>时发现 shoka 主题的 js 有近 200 个弱警告和 10 余个警告，就想处理一下这些警告</p>\n<div class=\"note info\">\n<p>本文基本是兼容性换性能和未来支持，基本 IE 系列就全系不支持了</p>\n</div>\n<h1 id=\"es6语法\"><a class=\"anchor\" href=\"#es6语法\">#</a> ES6 语法</h1>\n<h2 id=\"升级uglifyjs\"><a class=\"anchor\" href=\"#升级uglifyjs\">#</a> 升级 uglifyjs</h2>\n<p>铺面而来的就是 <code>使用了var而非let或const</code>  这个警告，随后就直接使用了 WebStorm 的快速修复，然后 <code>hexo g</code> :</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ERROR: Unexpected token: keyword «const»</pre></td></tr></table></figure><p>网上针对这个的教程都是替换为 <code>uglify-es</code> , 但在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdWdsaWZ5LWVz\"> npm 主页</span> 中明确写道:  <code>support for ECMAScript is superseded by 'uglify-js' as of v3.13.0</code> <br />\n 所以直接升级 uglify-js 即可:<br />\n 打开 <code>yourblog\\node_modules\\hexo-renderer-multi-markdown-it\\</code> , 随后运行 <code>cnpm i uglify-js</code> , 等待安装完毕。<br />\n随后打开 <code>node_modules\\hexo-renderer-multi-markdown-it\\lib\\filter.js</code> , 打开第 90 行左右:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> UglifyJS<span class=\"token punctuation\">.</span><span class=\"token function\">minify</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> result<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> log <span class=\"token operator\">=</span> hexo<span class=\"token punctuation\">.</span>log <span class=\"token operator\">||</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify the js: %s [ %s saved]'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> saved <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> js_result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>stamp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">var</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">'// build time:'</span> <span class=\"token operator\">+</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> <span class=\"token string\">'\\n//rebuild by hrmmi '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    js_result <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> js_result <span class=\"token operator\">+</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">return</span> js_result<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>更改为:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> uglify_v3_allow_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"parse\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mangle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sourceMap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nameCache\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"toplevel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"warnings\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> uglify_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">of</span> uglify_v3_allow_options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> uglify_options<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> UglifyJS<span class=\"token punctuation\">.</span><span class=\"token function\">minify</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> uglify_options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>result<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> result<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">var</span> log <span class=\"token operator\">=</span> hexo<span class=\"token punctuation\">.</span>log <span class=\"token operator\">||</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify the js: %s [ %s saved]'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> saved <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">var</span> js_result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>stamp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">var</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">'// build time:'</span> <span class=\"token operator\">+</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">var</span> end <span class=\"token operator\">=</span> <span class=\"token string\">'\\n//rebuild by kaitaku'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            js_result <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> js_result <span class=\"token operator\">+</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">throw</span> result<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> js_result<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"替换var\"><a class=\"anchor\" href=\"#替换var\">#</a> 替换 var</h2>\n<p>建议直接使用 WebStorm 的快速修复替换，没有更快的方法了<br />\n但是需要将以下几行代码重新排序:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token string\">' .md img:not(.emoji):not(.vemoji)'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token keyword\">const</span> $image <span class=\"token operator\">=</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放到这个位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">const</span> imageLink <span class=\"token operator\">=</span> $image<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> $image<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放到这个位置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">const</span> $imageWrapLink <span class=\"token operator\">=</span> $image<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;a class=\"fancybox\" href=\"'</span> <span class=\"token operator\">+</span> imageLink <span class=\"token operator\">+</span> <span class=\"token string\">'\" itemscope itemtype=\"http://schema.org/ImageObject\" itemprop=\"url\">&lt;/a>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">let</span> info<span class=\"token punctuation\">,</span> captionClass <span class=\"token operator\">=</span> <span class=\"token string\">'image-info'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$image<span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    $image<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'safe-src'</span><span class=\"token punctuation\">,</span> imageLink<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$image<span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.gallery img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        $imageWrapLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-fancybox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        captionClass <span class=\"token operator\">=</span> <span class=\"token string\">'jg-caption'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token string\">'figure.highlight'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">const</span> code_container <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.code-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放到这</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">const</span> showBtn <span class=\"token operator\">=</span> code_container<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.show-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hideCode</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            code_container<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>maxHeight <span class=\"token operator\">=</span> <span class=\"token string\">\"300px\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            showBtn<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"处理部分弃用语法\"><a class=\"anchor\" href=\"#处理部分弃用语法\">#</a> 处理部分弃用语法</h1>\n<h2 id=\"杂项属性\"><a class=\"anchor\" href=\"#杂项属性\">#</a> 杂项属性</h2>\n<p><code>global.js</code>  中第 196 行的 <code>pageYOffset</code>  已经被标记为了弃用，可以使用 <code>scrollY</code>  代替，直接全局替换即可<br />\n <code>player.js</code>  第 470 行的 <code>webkitTransform</code>  已被标记为弃用，可以直接删除</p>\n<h2 id=\"execcommand处理\"><a class=\"anchor\" href=\"#execcommand处理\">#</a> execCommand 处理</h2>\n<p>主题使用了 <code>execCommand</code>  进行代码块复制操作，但现在 <code>execCommand</code>  已经被标记为了弃用<br />\n现在已经推出了新的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NsaXBib2FyZA==\"> ClipboardAPI</span> 来进行剪切板操作，这个 API 有以下优点:</p>\n<ul>\n<li>底层为异步，速度较快</li>\n<li>代码复杂度低，逻辑简单</li>\n<li>主流浏览器支持较好 (对于一个新兴 API 而言)</li>\n</ul>\n<div class=\"note info\">\n<p><code>clipboardAPI</code>  只能在安全上下文 (HTTPS) 中使用</p>\n</div>\n<p>打开 <code>global.js</code>  第 276 行，找到如下代码:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clipBoard</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> ta <span class=\"token operator\">=</span> <span class=\"token constant\">BODY</span><span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            top<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Prevent page scrolling</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            position<span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            opacity<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        readOnly<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        value<span class=\"token operator\">:</span> str</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">const</span> selection <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">const</span> selected <span class=\"token operator\">=</span> selection<span class=\"token punctuation\">.</span>rangeCount <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> selection<span class=\"token punctuation\">.</span><span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ta<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ta<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectionRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    ta<span class=\"token punctuation\">.</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    callback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    ta<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// For iOS</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        selection<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        selection<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token constant\">BODY</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>将其更改为如下代码:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clipBoard</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>clipboard <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>isSecureContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用clipboard复制\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 测试</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">writeText</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            callback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            callback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用execCommand复制\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 测试</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">const</span> ta <span class=\"token operator\">=</span> <span class=\"token constant\">BODY</span><span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            style<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                top<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Prevent page scrolling</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                position<span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                opacity<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            readOnly<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            value<span class=\"token operator\">:</span> str</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">const</span> selection <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">const</span> selected <span class=\"token operator\">=</span> selection<span class=\"token punctuation\">.</span>rangeCount <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> selection<span class=\"token punctuation\">.</span><span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ta<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ta<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectionRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ta<span class=\"token punctuation\">.</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        callback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        ta<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// For iOS</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            selection<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            selection<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token constant\">BODY</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>随后重新生成静态文件，打开任意界面复制代码，如果控制台输出了 <code>使用clipboard复制</code> ，就可以把两行带有测试注释的代码删掉了</p>\n<div class=\"note info\">\n<p>目前修补仍在缓慢进行中，此文章会不定期更新</p>\n</div>\n",
            "tags": [
                "网站建设",
                "shoka"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/notice/",
            "url": "https://www.kaitaku.xyz/notice/",
            "title": "公告",
            "date_published": "2022-05-14T00:35:17.000Z",
            "content_html": "<h1 id=\"本站公告\"><a class=\"anchor\" href=\"#本站公告\">#</a> 本站公告</h1>\n<h2 id=\"更新计划\"><a class=\"anchor\" href=\"#更新计划\">#</a> 更新计划</h2>\n<p>5、6 月份基本都会处于咕咕咕状态，精力会主要放在整理早期内容和优化网站上<span class=\"spoiler\" title=\"你知道得太多了\">早期挖坑太多</span> <br />\n下面是一个长期更新计划表:</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> 整理 python 基础篇</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> 完成一部分一直咕咕咕的内容</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> 优化 JSD 反代速度</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> 解决 valine-&gt;twikoo 的遗留问题</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> 移除 valine 依赖</label></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://www.kaitaku.xyz/webbuild/shokatwikoo/",
            "url": "https://www.kaitaku.xyz/webbuild/shokatwikoo/",
            "title": "shoka主题-更换评论区为twikoo",
            "date_published": "2022-04-23T12:52:28.000Z",
            "content_html": "<h1 id=\"更改评论区\"><a class=\"anchor\" href=\"#更改评论区\">#</a> 更改评论区</h1>\n<h2 id=\"更改njk模板\"><a class=\"anchor\" href=\"#更改njk模板\">#</a> 更改 njk 模板</h2>\n<p>打开 <code>yourblog\\themes\\shoka\\layout\\_macro\\comment.njk</code> , 然后把代码改为如下格式:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% macro render() %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&#123;%- if page.comment !== false %&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  &#123;%- if theme.twikoo.enable %&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tcomments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/twikoo@1.5.4/dist/twikoo.all.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#123;%- if theme.twikoo.mode === \"vercel\" %&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">data-pjax</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      twikoo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      envId<span class=\"token operator\">:</span> <span class=\"token string\">\"&#123;&#123; theme.twikoo.envId &#125;&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      el<span class=\"token operator\">:</span> <span class=\"token string\">'#tcomments'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 容器元素</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\">//region: 'ap-guangzhou', // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">//path: 'window.location.pathname', // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\">//lang: 'zh-CN', // 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/js/utils/i18n/index.js</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    &#123;%- else %&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">data-pjax</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      twikoo.init(&#123;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      envId: \"&#123;&#123; theme.twikoo.envId &#125;&#125;\", // 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      el: '#tcomments', // 容器元素</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      region: '&#123;&#123; theme.twikoo.region &#125;&#125;', // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      // path: 'window.location.pathname', // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      // lang: 'zh-CN', // 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/js/utils/i18n/index.js</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      &#125;)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    &#123;%- endif %&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  &#123;%- else %&#125;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  &#123;%- endif %&#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>&#123;%- endif %&#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>&#123;% endmacro %&#125;</pre></td></tr></table></figure><div class=\"note info\">\n<p>如果代码没加载出来，可以直接去<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3prejA5OC9oZXhvLXRoZW1lLXNob2th\"> github</span> 看代码</p>\n</div>\n<h2 id=\"加入配置选项\"><a class=\"anchor\" href=\"#加入配置选项\">#</a> 加入配置选项</h2>\n<p>在 <code>yourblog/themes/shoka/_config.yml</code>  加入如下代码:</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">twikoo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> vercel <span class=\"token comment\"># vercel 或 tencent</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">envId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://xxx.vercel.app\"</span> <span class=\"token comment\"># twikoo 环境 ID,vercel 填地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span> <span class=\"token comment\">#tencent 填对应 ap 地域，vercel 随便填</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>填写内容见<span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2lrb28uanMub3JnL3F1aWNrLXN0YXJ0Lmh0bWw=\"> twikoo 文档</span></p>\n</div>\n<h1 id=\"pjax问题\"><a class=\"anchor\" href=\"#pjax问题\">#</a> pjax 问题</h1>\n<h2 id=\"head引入\"><a class=\"anchor\" href=\"#head引入\">#</a> head 引入</h2>\n<div class=\"note info\">\n<p>建议使用本方案</p>\n</div>\n<p>最近发现 jsd 聚合引入会存在评论不刷新的问题，目前解决方案为更改为 head 引入<br />\n打开 <code>shoka\\layout\\_partials\\head\\head.njk</code> , 在最后加入:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.staticfile.org/twikoo/1.5.11/twikoo.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>即可</p>\n<h2 id=\"jsd聚合\"><a class=\"anchor\" href=\"#jsd聚合\">#</a> jsd 聚合</h2>\n<div class=\"note info\">\n<p>参考自<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi9wb3N0cy8zMjY1MTczNzAxLw==\"> Shoka 主题：新增文章统计页面</span> 中针对 echarts pjax 问题的解决方案</p>\n</div>\n<div class=\"note warning\">\n<p>此方法可能存在评论区不刷新问题，建议使用方法 1</p>\n</div>\n<p>到这一步实际上已经成功了，但首次进入页面评论区会加载不出来，需要解决 pjax 问题<br />\n打开主题配置文件，找到 <code>vendors</code>  选项，在 js 中增加下列项:</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t&lt;其余第三方js<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token key atrule\">twikoo</span><span class=\"token punctuation\">:</span> npm/twikoo@1.5.4/dist/twikoo.all.min.js</pre></td></tr></table></figure><p>找到 <code>themes\\shoka\\scripts\\generaters\\script.js</code>  文件，大概 24 行前后，找到 <code>js</code>  项，增加一项：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto_scroll<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>auto_scroll<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    js<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      valine<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>vendors<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      chart<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>vendors<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>chart<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      copy_tex<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>vendors<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>copy_tex<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      fancybox<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>vendors<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>fancybox<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      twikoo<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>vendors<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span>twikoo<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 新增</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>打开 <code>themes\\shoka\\scripts\\helpers\\assets.js</code>  文件，大概 50 行，找到如下代码:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>config<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">//Get a font list from config</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> vendorJs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pjax'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anime'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'algolia'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'instantsearch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lazyload'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'quicklink'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 这里在 quicklink 后新增</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>将 <code>let vendorJs</code>  更改为下列内容:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> vendorJs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pjax'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anime'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'algolia'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'instantsearch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lazyload'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'quicklink'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'twikoo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><p>更改完后的代码:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>config<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">//Get a font list from config</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> vendorJs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pjax'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'anime'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'algolia'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'instantsearch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lazyload'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'quicklink'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'twikoo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"其他内容\"><a class=\"anchor\" href=\"#其他内容\">#</a> 其他内容</h1>\n<h2 id=\"访问量统计\"><a class=\"anchor\" href=\"#访问量统计\">#</a> 访问量统计</h2>\n<p>更改为 twikoo 会导致最新评论、访问量统计失效，<br />\n修复访问量统计，打开 <code>themes\\shoka\\layout\\_partials\\post\\footer.njk</code> , 大概在 20 行左右:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;%- if theme.valine.appId and theme.valine.appKey and theme.valine.visitor %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; page.path | replace(<span class=\"token punctuation\">'</span>index.html<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span>) &#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item leancloud_visitors<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-flag-title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; post.title &#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; __(<span class=\"token punctuation\">'</span>post.views<span class=\"token punctuation\">'</span>) &#125;&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ic i-eye<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; __('post.views') &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>leancloud-visitors-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123; __('symbols_count_time.view') &#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  &#123;%- endif %&#125;</pre></td></tr></table></figure><p>删去 <code>&lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</code> , 在第 3 行添加如下内容:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ic i-eye<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>此文章已被阅读次数: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twikoo_visitors<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>正在加载...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>访问量统计就会重新出现</p>\n<h2 id=\"移除minivaline\"><a class=\"anchor\" href=\"#移除minivaline\">#</a> 移除 miniValine</h2>\n<p>这样处理完后 miniValine 仍会加载、拖慢加载速度，需要手动移除依赖<br />\n打开 <code>shoka/source/js/pjax.js</code>  第 58 行:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vendorJs</span><span class=\"token punctuation\">(</span><span class=\"token string\">'valine'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span>valine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    options <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> <span class=\"token constant\">LOCAL</span><span class=\"token punctuation\">.</span>valine<span class=\"token operator\">||</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    options<span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> <span class=\"token string\">'#comments'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    options<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">=</span> <span class=\"token constant\">LOCAL</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    options<span class=\"token punctuation\">.</span>pjax <span class=\"token operator\">=</span> pjax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    options<span class=\"token punctuation\">.</span>lazyload <span class=\"token operator\">=</span> lazyload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniValine</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">positionInit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token function\">postFancybox</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>MiniValine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>将这一段全部注释或删除即可</p>\n<h2 id=\"最新评论\"><a class=\"anchor\" href=\"#最新评论\">#</a> 最新评论</h2>\n<p>打开 <code>shoka\\layout\\_macro\\widgets.njk</code> , 第 26 行:<br />\n 改成如下代码块:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rpost pjax<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>最新评论<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>leancloud-recent-comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twikoo_comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>然后打开 <code>shoka\\layout\\_partials\\layout.njk</code> , 最底下:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.polyfill.io/v3/polyfill.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>部分代码可能会加载不成功，请讲下面的代码放在 <code>partial</code>  那行之后</p>\n</div>\n<p>加入如下代码块:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">data-pjax</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    twikoo<span class=\"token punctuation\">.</span><span class=\"token function\">getRecentComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        envId<span class=\"token operator\">:</span> <span class=\"token string\">\"https://twikoo-zkz098.vercel.app\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        pageSize<span class=\"token operator\">:</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        res<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">let</span> siteLink <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>id</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">let</span> commentList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"twikoo_comment\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">let</span> commentElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>commentElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"item\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">let</span> commentLink <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            commentLink<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">,</span> siteLink<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            commentLink<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-pjax-state\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"data-pjax-state\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">let</span> commenterAndTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            commenterAndTime<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>nick <span class=\"token operator\">+</span> <span class=\"token string\">\"@\"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>relativeTime</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            commenterAndTime<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"breadcrumb\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">let</span> commentTextNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            commentTextNode<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>commentText</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 下面都是节点添加</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            commentLink<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>commenterAndTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            commentLink<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>commentTextNode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            commentElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>commentLink<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            commentList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>commentElement<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>随后最新评论功能就回来了</p>\n<div class=\"note info\">\n<p>获取最新评论较慢，可能有 0.3-3s 的延迟</p>\n</div>\n",
            "tags": [
                "网站建设",
                "shoka",
                "twikoo"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/app/pythonrsa/",
            "url": "https://www.kaitaku.xyz/python/app/pythonrsa/",
            "title": "python实现RSA加密文件",
            "date_published": "2022-04-15T07:13:54.000Z",
            "content_html": "<h1 id=\"rsa加密的python实现\"><a class=\"anchor\" href=\"#rsa加密的python实现\">#</a> RSA 加密的 python 实现</h1>\n<h2 id=\"rsa库安装\"><a class=\"anchor\" href=\"#rsa库安装\">#</a> RSA 库安装</h2>\n<p>在 python 中，有一个库已经了 RSA 加解密的功能，就是 rsa 库<span class=\"spoiler\" title=\"你知道得太多了\">库如其名</span><br />\n使用 pip 安装 rsa 库:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> rsa</pre></td></tr></table></figure><h2 id=\"rsa库使用\"><a class=\"anchor\" href=\"#rsa库使用\">#</a> RSA 库使用</h2>\n<h3 id=\"生成密钥\"><a class=\"anchor\" href=\"#生成密钥\">#</a> 生成密钥</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>pubKey<span class=\"token punctuation\">,</span>privKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>newkeys<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>使用 <code>rsa.newkeys</code>  生成密钥对，括号内的参数为 RSA 位数</p>\n<div class=\"note info\">\n<p>不建议使用 RSA1024 及位以下的密钥，因为 RSA1024 及以下已被破解 (或较易被破解)</p>\n</div>\n<p>可以加入参数 <code>poolsize=int</code>  来使用多线程计算，<span class=\"spoiler\" title=\"你知道得太多了\"> 概率出现程序循环的问题</span></p>\n<div class=\"note warning\">\n<p>3072 位以上的 RSA 秘钥生成可能需要 1 分钟或更长，请确保你有足够的耐心</p>\n</div>\n<h3 id=\"保存与加载秘钥\"><a class=\"anchor\" href=\"#保存与加载秘钥\">#</a> 保存与加载秘钥</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>pubKey<span class=\"token punctuation\">,</span>privKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>newkeys<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pubkey.pem\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>pubKey<span class=\"token punctuation\">.</span>save_pkcs1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"privkey.pem\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>privKey<span class=\"token punctuation\">.</span>save_pkcs1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>使用 <code>wb</code> 、 <code>rb</code>  等方法读取出来的都是 bytes 格式，无需二次转换</p>\n</div>\n<p>将 pub/privkey 对象转换为 bytes 的方法为 <code>key.save_pkcs1</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pubkey.pem\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    pubKey <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>PublicKey<span class=\"token punctuation\">.</span>load_pkcs1<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"privkey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    privKey <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>PrivateKey<span class=\"token punctuation\">.</span>load_pkcs1<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>使用 <code>rsa.PublicKey(或PrivateKey).load_pkcs1</code>  方法可以加载字节内的秘钥</p>\n<h3 id=\"加密和解密\"><a class=\"anchor\" href=\"#加密和解密\">#</a> 加密和解密</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>pubKey<span class=\"token punctuation\">,</span>privKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>newkeys<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>text <span class=\"token operator\">=</span> <span class=\"token string\">b\"hello world\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rsa<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> pubKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>会输出一串 bytes, 这个就是加密后的结果</p>\n<div class=\"note info\">\n<p>公钥加密，私钥解密</p>\n</div>\n<div class=\"note info\">\n<p>RSA 库加密必须使用 bytes 格式，str 可以用 <code>str.encode(&quot;utf-8&quot;)</code>  转换为 bytes</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>pubKey<span class=\"token punctuation\">,</span>privKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>newkeys<span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>text <span class=\"token operator\">=</span> <span class=\"token string\">b\"加密后的内容\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rsa<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> privKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>python 中 RSA 库的加密是有长度上限的，一般为: RSA 位数 / 8/3 (或者 2) 个中文字符<br />\n RSA 4.0 后已经删除了 bigfile 模块，后续可能会出一篇解决方案</p>\n</div>\n<h1 id=\"rsa与其他算法\"><a class=\"anchor\" href=\"#rsa与其他算法\">#</a> RSA 与其他算法</h1>\n<h2 id=\"rsa加密流程\"><a class=\"anchor\" href=\"#rsa加密流程\">#</a> RSA 加密流程</h2>\n<p>首先，加密双方必须生成一对秘钥对 (长度最好一致)<br />\n 然后互相交换 publickey 文件:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/00d8d190-b3f2-4db9-a247-6e0042f7c7cb.png\" alt=\"加密的理想状态\" /><br />\n但假如现在出现了一个中间人，他会保存所有监听到的东西:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/279c87a2-42b0-480a-ac8a-b1e962cc8a5c.png\" alt=\"出现中间人\" /><br />\n然后双方使用对方的秘钥进行加密，将密文发送给对方，对方使用自己的私钥解密:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/e20b7278-c6ba-4511-9f0e-47a7bfadad8a.png\" alt=\"发送数据\" /><br />\n此时，双方可以顺利的解密对方发来的数据并进行解密，但中间人呢？<br />\n中间人手里只有密文和公钥，并无法进行解密，且不可能暴力破解 <br />\n这样就实现了信息的安全传输，且私钥并没有外泄</p>\n<h2 id=\"aes算法\"><a class=\"anchor\" href=\"#aes算法\">#</a> AES 算法</h2>\n<p>首先，AES 算法是对称加密算法，这意味着它加解密使用同一个秘钥<br />\n现在有用户 A、B, 他们会通过网络交换密文:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/fecad802-5c72-4393-8021-7db40f599b8c.png\" alt=\"image.png\" /><br />\n 然后熟悉的中间人又出现了，他还是会监听并保存所有内容:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/2b075559-0aef-4fd4-9cfb-582c04a417db.png\" alt=\"image.png\" /><br />\n 交换秘钥和密文:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/a46a7723-0a04-414f-a75f-6d517bbd3043.png\" alt=\"image.png\" /><br />\n 这时中间人已经可以解密双方的密文了，所以 AES 并不适合在不安全网络下传播</p>\n<div class=\"note info\">\n<p>算法各有优点，见总结部分</p>\n</div>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>AES (对称加密) 算法更适用于在安全环境下加密大量数据 <br />\nRSA (非对称加密) 算法适用于在不安全环境下加密少量数据</p>\n<div class=\"note info\">\n<p>RSA 加密大量数据太慢了，大量数据可以试试 ECC (假如真的不想用 AES)</p>\n</div>\n<div class=\"note info\">\n<p>RSA 加密原理、大文件下一篇再说</p>\n</div>\n",
            "tags": [
                "python",
                "应用篇",
                "python",
                "非对称加密"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/misc/windbg/",
            "url": "https://www.kaitaku.xyz/misc/windbg/",
            "title": "记一次用windbg分析蓝屏原因",
            "date_published": "2022-04-09T10:18:49.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>这次帮一个朋友解决蓝屏，但无法进行现场检测<span class=\"spoiler\" title=\"你知道得太多了\">懒得出去</span>，远程也看不到蓝屏代码<br />\n只能使用 windbg 来分析内存文件检测蓝屏原因</p>\n<h1 id=\"windbg使用\"><a class=\"anchor\" href=\"#windbg使用\">#</a> windbg 使用</h1>\n<h2 id=\"下载和安装\"><a class=\"anchor\" href=\"#下载和安装\">#</a> 下载和安装</h2>\n<p>本文使用 windowsSDK 进行安装，安装地址<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS96aC1jbi93aW5kb3dzL2Rvd25sb2Fkcy93aW5kb3dzLXNkay8=\">点我</span><br />\n进入后选择下载应用程序:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/9c3d11ff-6a92-4904-adbb-321b64c3b475.png\" alt=\"微软官网界面\" /><br />\n选择下载路径:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/47b26ffb-9d54-4298-9a6f-860eb9d3ea60.png\" alt=\"SDK位置\" /><br />\n勾选第二项即可:<br />\n<img data-src=\"https://static.aichat.net/chat/202204/b05d765c-ca9d-4e69-a168-c5b12f4aa2a2.png\" alt=\"选择安装部分\" /><br />\n安装完成后到下载路径 (下载路径 / Installers/X64 Debuggers And Tools-x64_en-us.msi) 双击安装即可</p>\n<h2 id=\"配置符号表\"><a class=\"anchor\" href=\"#配置符号表\">#</a> 配置符号表</h2>\n<p>在开始菜单内找到 windbg, 打开后界面点击 file-&gt;Symbol File Path<br />\n 在弹出来的对话框内填入如下内容:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>srv*c:\\symbols*https:&#x2F;&#x2F;msdl.microsoft.com&#x2F;download&#x2F;symbols</pre></td></tr></table></figure><p>选择 OK</p>\n<h2 id=\"开始分析崩溃文件\"><a class=\"anchor\" href=\"#开始分析崩溃文件\">#</a> 开始分析崩溃文件</h2>\n<p>首先，你需要从目标电脑的 % SystemRoot%(一般为 C:/windows) 下找到 MEMORY.DMP 文件<br />\n将其放到合适位置后，点击 File -&gt; Open Crash Dump 选择崩溃文件<br />\n弹出来的界面应该如下 (这个崩溃文件是 win7 SP1 的文件)<br />\n<img data-src=\"https://static.aichat.net/chat/202204/504b5ca4-35ee-485a-b7a6-5154aecabf02.png\" alt=\"image.png\" /><br />\n 然后输入 <code>!analyze -v</code>  对文件进行深入分析<br />\n然后看输出的内容:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>*******************************************************************************</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>*                                                                             *</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*                        Bugcheck Analysis                                    *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>*                                                                             *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*******************************************************************************</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>PAGE_FAULT_IN_NONPAGED_AREA (50)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Invalid system memory was referenced.  This cannot be protected by try-except.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Typically the address is just plain bad or it is pointing at freed memory.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Arguments:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Arg1: fffff8817cdadbc0, memory referenced.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Arg2: 0000000000000000, value 0 &#x3D; read operation, 1 &#x3D; write operation.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Arg3: fffff880088da185, If non-zero, the instruction address which referenced the bad memory</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\taddress.</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Arg4: 0000000000000005, (reserved)</pre></td></tr></table></figure><p>输出的第一行为崩溃原因，一般和 win10 的蓝屏代码是一致的</p>\n<div class=\"note info\">\n<p>括号内的为 win7 版本，本案例就是 <code>0x0000050</code></p>\n</div>\n<div class=\"note warning\">\n<p>这个代码的本意为崩溃原因和代码，并不只针对于 windows</p>\n</div>\n<p>然后就可以去搜索此错误代码了，一般有对应的解决方案</p>\n<div class=\"note info\">\n<p>本案例到最后也没查到根本原因🤣</p>\n</div>\n<p>但是，在下面还有一<span class=\"spoiler\" title=\"你知道得太多了\">亿</span>些内容，在里面有两条比较重要的</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Unable to load image \\SystemRoot\\system32\\DRIVERS\\igdpmd64.sys, Win32 error 0n2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Unable to load image \\SystemRoot\\system32\\DRIVERS\\atikmpag.sys, Win32 error 0n2</pre></td></tr></table></figure><p>这两条代表 <code>igdpmd64.sys</code>  和 <code>atikmpag.sys</code>  驱动是概率存在问题的<br />\n后来收到了对方发来的蓝屏图片，里面的关键内容如下:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>STOP: 0x00000050 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>igdpmd64.sys - Address FFFFF88007AE0185 base at XXXX...</pre></td></tr></table></figure><p>证实了是 <code>igdpmd64.sys</code>  导致的蓝屏，并且代码为 50<br />\n 后查询得知这个是 AMD 显卡的驱动文件，结合蓝屏的使用经历 (屏幕共享功能导致), 基本可以得出是显卡驱动导致蓝屏</p>\n<div class=\"note info\">\n<p>电脑上的显卡是 ATI radeon HD 7450M, 确实有亿点老</p>\n</div>\n",
            "tags": [
                "杂项",
                "windbg",
                "windows"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/golang/go5/",
            "url": "https://www.kaitaku.xyz/golang/go5/",
            "title": "go语言-函数与作用域",
            "date_published": "2022-03-27T08:56:51.000Z",
            "content_html": "<h1 id=\"函数\"><a class=\"anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> y <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>go 语言函数的定义格式如下:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">funcName</span><span class=\"token punctuation\">(</span>param <span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> returnType <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    code</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>func</code>  为关键字，go 语言中使用 func 定义函数 <br />\n <code>funcName</code>  为函数名，推荐使用小驼峰写法 (下文介绍) <br />\n <code>param</code>  为参数名称， <code>type</code>  为参数类型 <br />\n <code>returnType</code>  为函数返回值，不返回可以不写 <br />\n <code>code</code>  为代码块</p>\n<div class=\"note info\">\n<p>smallFontOutput 就是小驼峰写法，即为首字母小写，其他单词的首字母大写</p>\n</div>\n<p>如果需要多个参数，把参数写为 <code>param type, param type</code>  即可<br />\n go 语言可以返回多个变量，如下:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> b<span class=\"token punctuation\">,</span> a</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"变量作用域\"><a class=\"anchor\" href=\"#变量作用域\">#</a> 变量作用域</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 这里不可以用 c</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 这里可以用 c</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 这里不可以用 c</span></pre></td></tr></table></figure><p>这里的 c 就是局部变量，仅在函数内可用</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 所有地方都可以用</span></pre></td></tr></table></figure><p>这里的 c 是全局变量，整个文件内可用</p>\n<div class=\"note info\">\n<p>闭包在后面会提及</p>\n</div>\n<h2 id=\"defer语句\"><a class=\"anchor\" href=\"#defer语句\">#</a> defer 语句</h2>\n<p>Go 语言中的 defer 语句会将语句推迟到函数退出时执行</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>输出结果:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>start</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>end</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1</pre></td></tr></table></figure>",
            "tags": [
                "GO语言学习笔记",
                "go"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/app/pythona1/",
            "url": "https://www.kaitaku.xyz/python/app/pythona1/",
            "title": "python-用企业微信机器人发天气预报",
            "date_published": "2022-03-18T06:25:21.000Z",
            "content_html": "<div class=\"note info\">\n<p>本文实际上是企业微信机器人 + 天气预报，但拆开有点短，所以组合到一起了</p>\n</div>\n<h1 id=\"企业微信机器人\"><a class=\"anchor\" href=\"#企业微信机器人\">#</a> 企业微信机器人</h1>\n<h2 id=\"数据和模块准备\"><a class=\"anchor\" href=\"#数据和模块准备\">#</a> 数据和模块准备</h2>\n<p>请求头:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>head <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 声明为 json 类型</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>数据 (负载):</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        \"msgtype\": \"markdown\",</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        \"markdown\": &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            \"content\": \"暂时留空\"</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         &#125;'''</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>这里作者选用了 markdown 格式，markdown 语法可自行百度。</p>\n</div>\n<p>安装 requests 库:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> requests</pre></td></tr></table></figure><h2 id=\"定义post函数\"><a class=\"anchor\" href=\"#定义post函数\">#</a> 定义 post 函数</h2>\n<div class=\"note info\">\n<p>使用 requests 自带的 post 函数，如果数据内有中文会无法编码，需要包装函数</p>\n</div>\n<p>代码如下:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> verify<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">except</span> BaseException <span class=\"token keyword\">as</span> error<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post请求错误，错误原因：%s\"</span> <span class=\"token operator\">%</span> error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">raise</span> error</pre></td></tr></table></figure><h2 id=\"准备运行用代码\"><a class=\"anchor\" href=\"#准备运行用代码\">#</a> 准备运行用代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>res <span class=\"token operator\">=</span> post<span class=\"token punctuation\">(</span><span class=\"token string\">\"yourwebhook&amp;debug=1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>           header<span class=\"token operator\">=</span>head<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>带上 <code>&amp;debug=1</code>  参数是方便排查错误，如果你有信心可以不加</p>\n</div>\n<h1 id=\"天气预报api\"><a class=\"anchor\" href=\"#天气预报api\">#</a> 天气预报 API</h1>\n<div class=\"note info\">\n<p>本文选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYucXdlYXRoZXIuY29tLw==\">和风天气 API</span> 进行开发 <br />\n本文为<strong>现在天气</strong></p>\n</div>\n<h2 id=\"发送get请求\"><a class=\"anchor\" href=\"#发送get请求\">#</a> 发送 get 请求</h2>\n<div class=\"note info\">\n<p>请求内容不涉及中文，使用系统 get 函数即可</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>yoururl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>r_dict <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>&lt;yoururl&gt; 格式如下:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https:&#x2F;&#x2F;devapi.qweather.com&#x2F;v7&#x2F;weather&#x2F;now?key&#x3D;&amp;location&#x3D;</pre></td></tr></table></figure><p>在 key 的等号后写入你的应用 key,location 查询见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMxOTMzNjMvYXJ0aWNsZS9kZXRhaWxzLzQ0ODUxODk3P3NwbT0xMDAxLjIxMDEuMzAwMS42NjUwLjImYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VSYXRlLTIucGNfcmVsZXZhbnRfZGVmYXVsdCZhbXA7ZGVwdGhfMS11dG1fc291cmNlPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctMiU3RWRlZmF1bHQlN0VDVFJMSVNUJTdFUmF0ZS0yLnBjX3JlbGV2YW50X2RlZmF1bHQmYW1wO3V0bV9yZWxldmFudF9pbmRleD01\">这篇文章</span></p>\n<h2 id=\"结果处理\"><a class=\"anchor\" href=\"#结果处理\">#</a> 结果处理</h2>\n<p>返回格式应该如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"updateTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-03-18T09:27+08:00\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"fxLink\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://hfx.link/2bp1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"now\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"obsTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2022-03-18T09:13+08:00\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"temp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"feelsLike\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"104\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"阴\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"wind360\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"135\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">\"windDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"东南风\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">\"windScale\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">\"windSpeed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">\"humidity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"76\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">\"precip\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">\"pressure\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1017\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">\"vis\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">\"cloud\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"100\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">\"dew\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">-4</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token property\">\"refer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">\"sources\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token string\">\"QWeather\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token string\">\"NMC\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token string\">\"ECMWF\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token string\">\"no commercial use\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>有可能是单引号的，但不影响使用</p>\n</div>\n<p>上面的 <code>r_dict</code>  变量已经是 dict 类型了，无需 <code>eval()</code></p>\n<h1 id=\"发送到企业微信\"><a class=\"anchor\" href=\"#发送到企业微信\">#</a> 发送到企业微信</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> cookie<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># data = json.dumps(data)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>cookie<span class=\"token punctuation\">,</span> verify<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">except</span> BaseException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post请求错误，错误原因：%s\"</span> <span class=\"token operator\">%</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> cookie<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># data = json.dumps(data)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>cookie<span class=\"token punctuation\">,</span> verify<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">except</span> BaseException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get请求错误，错误原因：%s\"</span> <span class=\"token operator\">%</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>head <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://devapi.qweather.com/v7/weather/now?key=&amp;location=\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>r_dict <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>str1 <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>天气beta版 \\n</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>>更新时间:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>>观测时间:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"obsTime\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>>温度:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"temp\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**℃</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>>体感温度:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"feelsLike\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**℃</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>>天气:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>>风向:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"windDir\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>>风力:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"windScale\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**级</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>>湿度:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"humidity\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**%</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>>降水量:**</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>r_dict<span class=\"token punctuation\">[</span><span class=\"token string\">\"now\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"precip\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">**mm</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\"\"\"</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''&#123;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        \"msgtype\": \"markdown\",</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        \"markdown\": &#123;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            \"content\": \"%s\"</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>         &#125;'''</span><span class=\"token operator\">%</span> str1</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>bot <span class=\"token operator\">=</span> post<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=any&amp;debug=1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>           header<span class=\"token operator\">=</span>head<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>bot<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这个就是完整代码了，建议使用 f-string 格式化，在 data 里<strong>必须使用</strong> <code>%</code>  格式化<br />\n假如一切正常，运行完后会输出:</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"errcode\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"errmsg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ok. Warning: wrong json format. \"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>企业微信里的机器人应该会正确的发出消息<span class=\"spoiler\" title=\"你知道得太多了\">不正确多半是排版错误</span></p>\n",
            "tags": [
                "python",
                "应用篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/golang/go4/",
            "url": "https://www.kaitaku.xyz/golang/go4/",
            "title": "go语言-数组与循环",
            "date_published": "2022-03-15T04:29:14.000Z",
            "content_html": "<h1 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h1>\n<h2 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个例子中 a 就是<strong>数组</strong>，数组是具有相同唯一类型的一组已编号且长度固定的数据项序列。<br />\n定义格式如下: <code>var var1 = [size]type&#123;value&#125;</code> , 数组内只能存储同一种数据，不可以像 python 一样存储多种数据</p>\n<div class=\"note info\">\n<p>数字的长度可以不填，代表由值自动决定长度</p>\n</div>\n<h2 id=\"读取\"><a class=\"anchor\" href=\"#读取\">#</a> 读取</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过在数组后加 <code>[index]</code>  就可以访问到指定的值，同理，它也可以被赋值给其他变量<br />\n索引从 0 开始，到长度 - 1 结束。</p>\n<div class=\"note info\">\n<p>类型转换下一节再写</p>\n</div>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>index 可以是 [start:end] 格式的，但务必注意:<strong> 切片含头不含尾</strong>。</p>\n<h2 id=\"改写\"><a class=\"anchor\" href=\"#改写\">#</a> 改写</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出内容:[1 3 3 4]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>格式: <code>arr[index]=value</code> <br />\n 使用 <code>arr=append(arr,arr...)</code>  来合并数组， <code>...</code>  代表解压切片</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ta <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"循环\"><a class=\"anchor\" href=\"#循环\">#</a> 循环</h1>\n<h2 id=\"for循环格式\"><a class=\"anchor\" href=\"#for循环格式\">#</a> for 循环格式</h2>\n<p>首先，go 语言没有 while 循环，只有 for 循环<br />\n格式如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> init<span class=\"token punctuation\">;</span>condition<span class=\"token punctuation\">;</span>post<span class=\"token punctuation\">&#123;</span> code <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 类似于 C 的 for 结构</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> condition<span class=\"token punctuation\">&#123;</span> code <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 类似于 C 的 while 循环</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//for 死循环</span></pre></td></tr></table></figure><p>init 为初始值，condition 为布尔表达式，post 为自增 / 减操作符</p>\n<div class=\"note info\">\n<p>布尔表达式为满足条件时退出，而非满足条件运行</p>\n</div>\n<p>这是一个输出从 1 到 10 数字的程序</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">for</span> a <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"遍历\"><a class=\"anchor\" href=\"#遍历\">#</a> 遍历</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int8</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> arr <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>go 中 for 遍历数组 (或其他容器数据), 格式如下： <code>for index,value := range oldMap &#123; code &#125;</code> <br />\n 索引或值不需要可以用 <code>_</code> 代替。</p>\n<h1 id=\"类型转换\"><a class=\"anchor\" href=\"#类型转换\">#</a> 类型转换</h1>\n<p>使用类名 +() 即可，例如 <code>string(var1)</code></p>\n",
            "tags": [
                "GO语言学习笔记",
                "go"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/golang/go2/",
            "url": "https://www.kaitaku.xyz/golang/go2/",
            "title": "go语言-语法和数据类型",
            "date_published": "2022-03-05T12:31:31.000Z",
            "content_html": "<h1 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h1>\n<h2 id=\"行分隔符\"><a class=\"anchor\" href=\"#行分隔符\">#</a> 行分隔符</h2>\n<p>先看一下 c++ 的 hello world:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"hello world\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后再看一下 go 的:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看出以下几点差异:</p>\n<ul>\n<li>C++ 使用 main 函数定位项目入口，go 使用 main 包定位项目入口</li>\n<li>C++ 使用分号作为行尾分隔符，go 无需分隔符</li>\n<li>C++ 使用 <code>include</code> ,go 使用 <code>import</code></li>\n</ul>\n<p>go 也可以使用分号，适用于一行多语句</p>\n<h1 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h1>\n<h2 id=\"创建变量\"><a class=\"anchor\" href=\"#创建变量\">#</a> 创建变量</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ta <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>go 中的变量创建格式为: <code>var name type</code> ,type 会在下文提到<br />\n也可以省略 type, 代码如下:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>go 编译器就会自动推断类型为 <code>int</code> , 无需额外指定 type</p>\n<div class=\"note info\">\n<p>后两种方法都需要初始赋值</p>\n</div>\n<p>再把 var 也省略掉:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里赋值格式为: <code>name := value</code></p>\n<div class=\"note info\">\n<p>这种赋值方法仅适用于未声明变量</p>\n</div>\n<h2 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h2>\n<h3 id=\"整数类型\"><a class=\"anchor\" href=\"#整数类型\">#</a> 整数类型</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:left\">范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">uint8</td>\n<td style=\"text-align:center\">无符号 8 位整型</td>\n<td style=\"text-align:left\">0-255</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint16</td>\n<td style=\"text-align:center\">无符号 16 位整型</td>\n<td style=\"text-align:left\">0-65535</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint32</td>\n<td style=\"text-align:center\">无符号 32 位整型</td>\n<td style=\"text-align:left\">0-4294967295</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint64</td>\n<td style=\"text-align:center\">无符号 64 位整型</td>\n<td style=\"text-align:left\">0-18446744073709551615</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int8</td>\n<td style=\"text-align:center\">有符号 8 位整形</td>\n<td style=\"text-align:left\">-128-127</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int16</td>\n<td style=\"text-align:center\">有符号 16 位整形</td>\n<td style=\"text-align:left\">-32768-32767</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int32</td>\n<td style=\"text-align:center\">有符号 32 位整形</td>\n<td style=\"text-align:left\">-2147483648-2147483647</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int64</td>\n<td style=\"text-align:center\">有符号 64 位整形</td>\n<td style=\"text-align:left\">-9223372036854775808-9223372036854775807</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note info\">\n<p>有或无符号指是否有一位符号位，无符号正数范围更大<strong>但不能储存负数</strong></p>\n</div>\n<h3 id=\"小数类型\"><a class=\"anchor\" href=\"#小数类型\">#</a> 小数类型</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">float32</td>\n<td style=\"text-align:center\">IEEE-754 32 位浮点型数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">float64</td>\n<td style=\"text-align:center\">IEEE-754 64 位浮点型数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex64</td>\n<td style=\"text-align:center\">32 位实数和虚数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">complex128</td>\n<td style=\"text-align:center\">64 位实数和虚数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他数字类型\"><a class=\"anchor\" href=\"#其他数字类型\">#</a> 其他数字类型</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">byte</td>\n<td style=\"text-align:center\">类似 uint8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rune</td>\n<td style=\"text-align:center\">类似 int32</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">为 int32/64</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint</td>\n<td style=\"text-align:center\">为 uint32/64</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uintptr</td>\n<td style=\"text-align:center\">无符号整型，用于存放一个指针</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"其他类型\"><a class=\"anchor\" href=\"#其他类型\">#</a> 其他类型</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">string</td>\n<td style=\"text-align:center\">字符串类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bool</td>\n<td style=\"text-align:center\">布尔值 (真或假)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"注意事项\"><a class=\"anchor\" href=\"#注意事项\">#</a> 注意事项</h3>\n<p>go 语言中的局部变量，只要声明，<strong> 必须使用</strong></p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>go 输入方法为 <code>fmt.Scan</code>  和 <code>fmt.Scanln</code></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>Scan 的参数为变量的<strong>指针</strong>，务必加上 &amp;</p>\n</div>\n",
            "tags": [
                "GO语言学习笔记",
                "go"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/golang/go3/",
            "url": "https://www.kaitaku.xyz/golang/go3/",
            "title": "go语言-运算符和分支结构",
            "date_published": "2022-03-05T12:31:31.000Z",
            "content_html": "<h1 id=\"运算符\"><a class=\"anchor\" href=\"#运算符\">#</a> 运算符</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">变量相加</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:left\">数字相减</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">数字相乘</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td style=\"text-align:left\">数字相除</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%</td>\n<td style=\"text-align:left\">数字求余</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">++</td>\n<td style=\"text-align:left\">自加</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--</td>\n<td style=\"text-align:left\">自减</td>\n</tr>\n</tbody>\n</table>\n<p>一个实例:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   c <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   c <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第三行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   c <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第四行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   c <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第五行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   a<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第六行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> a <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   a<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第七行 - c 的值为 %d\\n\"</span><span class=\"token punctuation\">,</span> a <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"分支结构\"><a class=\"anchor\" href=\"#分支结构\">#</a> 分支结构</h1>\n<h2 id=\"单分支\"><a class=\"anchor\" href=\"#单分支\">#</a> 单分支</h2>\n<h3 id=\"if结构\"><a class=\"anchor\" href=\"#if结构\">#</a> if 结构</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a大于10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>if 表达式格式如下:  <code>if 布尔表达式 &#123;语句&#125;</code> <br />\n 为真执行语句，为假不执行</p>\n<h2 id=\"双分支\"><a class=\"anchor\" href=\"#双分支\">#</a> 双分支</h2>\n<h3 id=\"if-else结构\"><a class=\"anchor\" href=\"#if-else结构\">#</a> if else 结构</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a大于10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a小于等于10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>大括号后接 else 即可，无需条件<br />\n当布尔表达式为假时，执行 else 代码块</p>\n<h2 id=\"多分支\"><a class=\"anchor\" href=\"#多分支\">#</a> 多分支</h2>\n<h3 id=\"if-else-if结构\"><a class=\"anchor\" href=\"#if-else-if结构\">#</a> if else if 结构</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a大于10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a大于5\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a大于0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a小于0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>一个分支结构可以有零、一或无数个 else if 代码块<br />\n当 if 的表达式不满足时，继续检查 else if 的表达式，都不满足执行 else</p>\n<div class=\"note info\">\n<p>一个 if else 结构至多执行一个代码块，多个代码块需要 if...if... 结构</p>\n</div>\n<h3 id=\"switch结构\"><a class=\"anchor\" href=\"#switch结构\">#</a> switch 结构</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">switch</span> a <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a为5\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a为10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a不为5或10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>switch 的语法如下:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> anyvar <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">case</span> var1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// code</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">case</span> var2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// code</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// code</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>switch...case...<strong> 不是通过缩进识别结构</strong>，是在这个 case 到下个 case 之间的代码<br />\n都视作一个代码块</p>\n</div>\n<p>case 后是一个准确的变量 / 值，不是布尔表达式<br />\n如果没有任何一个 case 执行，则执行 default 代码块</p>\n<div class=\"note info\">\n<p>select 结构放在信道里将，这里先跳过</p>\n</div>\n",
            "tags": [
                "GO语言学习笔记",
                "go"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/golang/go1/",
            "url": "https://www.kaitaku.xyz/golang/go1/",
            "title": "go语言-配置和输出",
            "date_published": "2022-03-05T05:41:22.000Z",
            "content_html": "<h1 id=\"安装和配置\"><a class=\"anchor\" href=\"#安装和配置\">#</a> 安装和配置</h1>\n<h2 id=\"go语言本体\"><a class=\"anchor\" href=\"#go语言本体\">#</a> go 语言本体</h2>\n<p>进入<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2xhbmcuZ29vZ2xlLmNuL2RsLw==\"> go 语言官网</span> <span class=\"spoiler\" title=\"你知道得太多了\">快的离谱</span><br />\n随后选择对应的版本，双击 msi 文件安装</p>\n<h2 id=\"goland安装\"><a class=\"anchor\" href=\"#goland安装\">#</a> goland 安装</h2>\n<p>一般来说大部分语言都需要一个 IDE, 这里用 goland 做例子</p>\n<div class=\"note info\">\n<p>goland 是付费软件，但网上破解教程一大堆，所以这里就不给破解教程了</p>\n</div>\n<p>点<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9nby8=\">这里</span> 下载<br />\n安装及配置教程同 pycharm, 故不在赘述</p>\n<h2 id=\"常见错误\"><a class=\"anchor\" href=\"#常见错误\">#</a> 常见错误</h2>\n<h3 id=\"gopathgomod-exists-but-should-not\"><a class=\"anchor\" href=\"#gopathgomod-exists-but-should-not\">#</a> $gopath/go.mod exists but should not</h3>\n<p>因为 goland 自动启用了 go 模块集成，但模块集成与 gopath 不兼容，所以出现此错误<br />\n解决方案：在命令行中执行以下命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>go <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>go <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn,direct</pre></td></tr></table></figure><p>然后删除 gopath 配置，重启电脑，问题随之解决。</p>\n<div class=\"note info\">\n<p>可以通过更改 <code>gopath</code>  或禁用 <code>go.mod</code>  的方式解决，但推荐使用 module 的方法</p>\n</div>\n<h3 id=\"no-go-files-in-gorootsrcgo\"><a class=\"anchor\" href=\"#no-go-files-in-gorootsrcgo\">#</a> no Go files in goroot/src/go</h3>\n<p>出现于既没有设置 module, 也没有设置 gopath 并且代码在非 src 目录下的情况<br />\n可以使用上面的解决方法设置 go module 来解决，这里不推荐<strong>使用 gopath 的方法</strong></p>\n<h1 id=\"go语言的hello-world\"><a class=\"anchor\" href=\"#go语言的hello-world\">#</a> go 语言的 hello world</h1>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">/* 这是一行注释 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>package main</code>  定义了包名，每个 go 文件的第一行都应该是 <code>package</code> 。 <code>package main</code>  表示这是一个独立的可执行程序，<br />\n 每个 go 项目都包含一个 main 包名的包 <br />\n <code>import &quot;fmt&quot;</code>  导入一个指定的库并告诉编译器需要使用这个库，类似于 <code>#include</code> 。<br />\n <code>fmt</code>  库包含了 go 语言的 I/O 函数 <br />\n <code>func main()</code>  为程序的主函数 (就是最开始执行的函数), 一般是第一个执行的函数</p>\n<div class=\"note info\">\n<p><code>init()</code>  函数的优先级高于 <code>func main()</code></p>\n</div>\n<p><code>/* xxx */</code>  是注释，同 C++ 的写法， <code>//</code>  是单行注释， <code>/* */</code>  是多行注释，不可嵌套使用 <br />\n <code>fmt.Println</code>  是输出一个字符串到控制台，使用 <code>fmt.Print(&quot;str\\n&quot;)</code>  可以实现同样的效果</p>\n<div class=\"note info\">\n<p>当标识符 (包括常量、变量、类型、函数名、结构字段等等) 以一个大写字母开头，如：Group1,<br />\n 那么使用这种形式的标识符的对象就可以被外部包的代码所使用 (客户端程序需要先导入这个包),<br />\n 这被称为导出 (像面向对象语言中的 public); 标识符如果以小写字母开头，则对包外是不可见的，<br />\n 但是他们在整个包的内部是可见并且可用的 (像面向对象语言中的 private)。</p>\n</div>\n",
            "tags": [
                "GO语言学习笔记",
                "go"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/easy/pythone10/",
            "url": "https://www.kaitaku.xyz/python/easy/pythone10/",
            "title": "python基础篇10-GUI和海龟库",
            "date_published": "2022-02-22T06:22:09.000Z",
            "content_html": "<div class=\"note info\">\n<p>尚未完成</p>\n</div>\n<h1 id=\"gui和绘图\"><a class=\"anchor\" href=\"#gui和绘图\">#</a> GUI 和绘图</h1>\n<h2 id=\"tkinter\"><a class=\"anchor\" href=\"#tkinter\">#</a> tkinter</h2>\n<h3 id=\"建一个窗口\"><a class=\"anchor\" href=\"#建一个窗口\">#</a> 建一个窗口</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> tkinter <span class=\"token keyword\">as</span> tk</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>window <span class=\"token operator\">=</span> tk<span class=\"token punctuation\">.</span>Tk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>window<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">(</span><span class=\"token string\">\"500x300\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>window<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"my window\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>window<span class=\"token punctuation\">.</span>mainloop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>tk.Tk</code>  为 tkinter 的窗口基类，是所有 tkinter 窗口的基类<br />\n <code>geometry</code>  为窗口设定大小的函数，使用 <code>x</code>  做分隔<br />\n <code>title</code>  为窗口的标题，输入字符串<br />\n <code>mainloop</code>  为窗口自动更新，<strong> 必须要写</strong></p>\n<h3 id=\"加行文字\"><a class=\"anchor\" href=\"#加行文字\">#</a> 加行文字</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> tkinter <span class=\"token keyword\">as</span> tk</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>window <span class=\"token operator\">=</span> tk<span class=\"token punctuation\">.</span>Tk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>window<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">(</span><span class=\"token string\">\"500x300\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>window<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"my window\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>l1 <span class=\"token operator\">=</span> tk<span class=\"token punctuation\">.</span>Label<span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span>text<span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span>width<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>bg<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>l1<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>window<span class=\"token punctuation\">.</span>mainloop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>Label 的参数：</p>\n<ul>\n<li>window：父窗口，即为显示的窗口</li>\n<li>text：显示的文字</li>\n<li>width：标签宽度</li>\n<li>bg：背景颜色</li>\n</ul>\n<p><code>l1.pack()</code>  是放置函数，用于把标签放在窗口上</p>\n<h2 id=\"turtle\"><a class=\"anchor\" href=\"#turtle\">#</a> turtle</h2>\n<h3 id=\"画个正方形\"><a class=\"anchor\" href=\"#画个正方形\">#</a> 画个正方形</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> turtle <span class=\"token keyword\">as</span> t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>carrot <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Turtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    carrot<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    carrot<span class=\"token punctuation\">.</span>rt<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>t<span class=\"token punctuation\">.</span>exitonclick<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>t.Turtle</code>  是 turtle 的画笔类<br />\n <code>forward/fd</code>  为前进 x 个像素<br />\n <code>right/rt</code>  右转 x 度<br />\n <code>left/lt</code>  左转 x 度<br />\n <code>backward/bk</code>  后退 x 个像素<br />\n <code>exitonclick</code>  函数保证画完后画布会保留</p>\n<h3 id=\"画个圆形\"><a class=\"anchor\" href=\"#画个圆形\">#</a> 画个圆形</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> turtle <span class=\"token keyword\">as</span> t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>carrot <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Turtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>carrot<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>t<span class=\"token punctuation\">.</span>exitonclick<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>circle</code>  方法可以画一个半径为 r 的圆</p>\n<h3 id=\"填充颜色\"><a class=\"anchor\" href=\"#填充颜色\">#</a> 填充颜色</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> turtle <span class=\"token keyword\">as</span> t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>carrot <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Turtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>carrot<span class=\"token punctuation\">.</span>fillcolor<span class=\"token punctuation\">(</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>carrot<span class=\"token punctuation\">.</span>begin_fill<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>carrot<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>carrot<span class=\"token punctuation\">.</span>end_fill<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>t<span class=\"token punctuation\">.</span>exitonclick<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>fillcolor</code>  为指定填入的颜色<br />\n <code>begin和end_fill</code>  为开始填色</p>\n",
            "tags": [
                "python",
                "基础篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/misc/antivirus/",
            "url": "https://www.kaitaku.xyz/misc/antivirus/",
            "title": "详解安软威胁名称意义",
            "date_published": "2022-02-22T02:32:20.000Z",
            "content_html": "<h1 id=\"常规威胁名\"><a class=\"anchor\" href=\"#常规威胁名\">#</a> 常规威胁名</h1>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HEUR:Trojan.WinLNK.Alien.gen</pre></td></tr></table></figure><p>这是卡巴斯基对某个病毒的报毒名</p>\n<h2 id=\"检测方法\"><a class=\"anchor\" href=\"#检测方法\">#</a> 检测方法</h2>\n<p><code>HEUR:</code>  为检测方法，常见的有以下几个：</p>\n<ul>\n<li><code>没有</code> ：一般为本地哈希校验或云查杀</li>\n<li><code>HEUR</code> ：机器启发，一般是已知病毒的变种或有明显特征</li>\n<li><code>UDS</code> ：紧急云拉黑，一般是新的病毒</li>\n<li><code>VHO</code> ：云启发查杀，已知的新型特征</li>\n<li><code>PDM</code> ：主动防御杀，通过已知行为杀</li>\n</ul>\n<p>但有很多例外，例如 360 的 <code>HEUR</code>  指 QVM 引擎的人工智能查杀<br />\n ESET 的 <code>HEUR</code>  还包含 DNA 启发，avast 的主防是 IDP, 每个厂商对同一种技术的叫法都不同</p>\n<h2 id=\"威胁类型和平台名\"><a class=\"anchor\" href=\"#威胁类型和平台名\">#</a> 威胁类型和平台名</h2>\n<h3 id=\"平台名\"><a class=\"anchor\" href=\"#平台名\">#</a> 平台名</h3>\n<p>在这个 <code>Trojan</code>  的位置部分杀软为平台名，常见的有以下几个：</p>\n<ul>\n<li><code>win32</code> ：在 windows x86 环境下的程序，最常见的类别</li>\n<li><code>win64</code> ：在 windows x64 环境下的程序，只能在 64 位系统运行</li>\n<li><code>win95/98</code> ：运行在 win95 这种 dos 内核系统上的程序</li>\n<li><code>dos</code> ：在 dos 环境下的威胁，现在基本已经没有了</li>\n<li><code>linux</code> ：在 linux 环境的威胁，针对服务器的较多</li>\n<li><code>Android</code> ：手机病毒，多为 <code>apk</code>  后缀</li>\n</ul>\n<h3 id=\"威胁类型\"><a class=\"anchor\" href=\"#威胁类型\">#</a> 威胁类型</h3>\n<div class=\"note info\">\n<p>威胁树为卡巴斯基威胁树，越靠上越危险</p>\n</div>\n<p>常见的分为以下几种类型：</p>\n<h4 id=\"木马trojan\"><a class=\"anchor\" href=\"#木马trojan\">#</a> 木马 (Trojan)</h4>\n<p>木马是最常见的威胁类型，大部分未被明确分类的威胁都是木马<br />\n属于威胁树的中层威胁，危险性从高到低都有</p>\n<h4 id=\"后门backdoor\"><a class=\"anchor\" href=\"#后门backdoor\">#</a> 后门 (Backdoor)</h4>\n<p>后门通常指可以远程地址通信并执行命令的威胁，部分远控病毒也属于此类<br />\n后门病毒一般用于窃取隐私、远程控制、执行推广、发动 DDos 等非法用途<br />\n属于威胁树的中上层威胁，危险性较高，部分会连接到 C&amp;C 服务器，执行更危险的操作</p>\n<h4 id=\"病毒virus\"><a class=\"anchor\" href=\"#病毒virus\">#</a> 病毒 (Virus)</h4>\n<p>病毒通常指可以自我复制并寄生在其他程序内的威胁，可以让正常程序变成病毒文件<br />\n一般通过局域网、移动硬盘、漏洞等方式传播，在浏览网页是也有可能通过网页文件传播<br />\n属于威胁树的中上层威胁，危险性较高，但一般没有危险行为</p>\n<h4 id=\"蠕虫worm\"><a class=\"anchor\" href=\"#蠕虫worm\">#</a> 蠕虫 (Worm)</h4>\n<p>蠕虫是病毒的升级版，它可以通过向 office 文件内注入宏的方式来传播，<br />\n 一般计算机感染后会主动向局域网甚至公网发动攻击，传播性极高<br />\n属于威胁树的上层威胁，危险性极高，可以通过注入等方法实施后门的攻击手法</p>\n<h4 id=\"rootkit\"><a class=\"anchor\" href=\"#rootkit\">#</a> Rootkit</h4>\n<p>Rootkit 是一种可以把自身嵌入系统内核内的威胁，通过注入驱动等方式实现 R0 级的权限<br />\n Rootkit 一般没有恶意行为，一般会与蠕虫、后门、木马等结合使用，实现病毒的自保<br />\n属于威胁树的中下层威胁，危险性中等，一般搭配使用</p>\n<div class=\"note info\">\n<p>bootkit 也属于 rootkit, 但它可以在系统启动前就加载完毕，从而进一步隐蔽</p>\n</div>\n<h4 id=\"漏洞利用exploit\"><a class=\"anchor\" href=\"#漏洞利用exploit\">#</a> 漏洞利用 (Exploit)</h4>\n<p>这种威胁会利用已知的漏洞对计算机发动攻击，从而注入后门等其他类型的病毒<br />\n一般可以通过打补丁解决，但 0day 漏洞就没有解决方法了<br />\n属于威胁树的中下层威胁，危险性低，一般为注入的 &quot;手段&quot;</p>\n<h4 id=\"工具tools\"><a class=\"anchor\" href=\"#工具tools\">#</a> 工具 (tools)</h4>\n<p>工具类是攻击时的辅助手段，常见的有 hacktool、virtool 这两种<br />\n hacktool 是黑客工具，例如系统激活软件就会被认为是 hacktool, 可能有破坏性<br />\n virtool 是混淆器，一般用于阻碍杀软识别特征或人工分析<br />\n属于威胁树下层威胁，危险性低</p>\n<h4 id=\"勒索ransom\"><a class=\"anchor\" href=\"#勒索ransom\">#</a> 勒索 (Ransom)</h4>\n<p>勒索病毒会加密用户的文档或硬盘并向用户索要赎金以解锁文件<br />\n现在病毒一般使用非对称加密算法，除非作者主动公布秘钥，否则很难解密<br />\n属于威胁树中上威胁，危险性高</p>\n<h2 id=\"家族名和变种名\"><a class=\"anchor\" href=\"#家族名和变种名\">#</a> 家族名和变种名</h2>\n<p><code>WinLNK</code>  即为家族名，是这个威胁及其变种的正式名称<br />\n <code>Aligen.gen</code>  即为变种名</p>\n",
            "tags": [
                "杂项",
                "安软"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/hexo/hexo2/",
            "url": "https://www.kaitaku.xyz/hexo/hexo2/",
            "title": "hexo教程2-配置与写作",
            "date_published": "2022-02-12T08:53:20.000Z",
            "content_html": "<div class=\"note info\">\n<p>此文章正在重新整理，我不推荐您现在阅读它</p>\n</div>\n<h1 id=\"配置hexo\"><a class=\"anchor\" href=\"#配置hexo\">#</a> 配置 hexo</h1>\n<h2 id=\"hexo配置\"><a class=\"anchor\" href=\"#hexo配置\">#</a> hexo 配置</h2>\n<div class=\"note info\">\n<p>hexo 配置指根目录下 <code>_config.yml</code></p>\n</div>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Site</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#网站大标题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">subtitle</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#网站副标题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#网站描述</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#关键字，空格分割</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#作者名</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN <span class=\"token comment\">#zh-CN 为简体中文</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">timezone</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Asia/Shanghai'</span> <span class=\"token comment\">#东八区时区</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># URL</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.kaitaku.xyz <span class=\"token comment\">#你的网站链接</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/ <span class=\"token comment\">#文章格式</span></pre></td></tr></table></figure><p>根据上述注释填入即可</p>\n<h2 id=\"主题配置\"><a class=\"anchor\" href=\"#主题配置\">#</a> 主题配置</h2>\n<h3 id=\"资源配置\"><a class=\"anchor\" href=\"#资源配置\">#</a> 资源配置</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Alternate site name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">alternate</span><span class=\"token punctuation\">:</span> Yume shoka <span class=\"token comment\"># 比大标题高一级的标题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\">#//cdn.jsdelivr.net/gh/yourname/repo@latest/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p><code>statics</code>  项中的注释部分是 jsdelivrCDN 加速，如果你的项目已经部署在了 github 上且开源<br />\n就可以去掉不是注释的 /, 然后把 yourname 改成你的 github 用户名，repo 改成项目名来加速网站</p>\n<div class=\"note info\">\n<p>由于 Jsdelivr 的 ICP 备案没了，所以国内服务器 /vercel 使用这项会更慢</p>\n</div>\n<h3 id=\"导航栏配置\"><a class=\"anchor\" href=\"#导航栏配置\">#</a> 导航栏配置</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> home</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> feather</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> list<span class=\"token punctuation\">-</span>alt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> /categories/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> th</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> tags</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># 友链: /friends/ || heart</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># links: /links/ || magic</span></pre></td></tr></table></figure><p>格式为： <code>显示文字: 文件位置 || 图标</code> <br />\n下拉式菜单格式：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">显示文字</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">显示文字</span><span class=\"token punctuation\">:</span> 位置 <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> 图标</pre></td></tr></table></figure><div class=\"note info\">\n<p>这里的文件位置为以 <code>source</code>  为根目录，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1pbmRleC1kcTFoejdiYTgwMGRnOWdpYTk4OW1jdXIydHZlYTIxMjhmMXQxZC5tZA==\"> 建立文件夹后内部文件名为 index.md</span></p>\n</div>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">social</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> github <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#191717\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">#google: https://plus.google.com/yourname || google</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#twitter: https://twitter.com/yourname || twitter || \"#00aff0\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">#zhihu: https://www.zhihu.com/people/yourname || zhihu || \"#1e88e5\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">#music: https://music.163.com/#/user/home?id=yourid || cloud-music || \"#e60026\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">#weibo: https://weibo.com/yourname || weibo || \"#ea716e\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">#about: https://about.me/yourname || address-card || \"#3b5998\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> mailto<span class=\"token punctuation\">:</span>mail@mail.com <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> envelope <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#55acd5\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">#facebook: https://www.facebook.com/yourname || facebook</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">#stackoverflow: https://stackoverflow.com/yourname || stack-overflow</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">#youtube: https://youtube.com/yourname || youtube</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">#instagram: https://instagram.com/yourname || instagram</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">#skype: skype:yourname?call|chat || skype</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">#douban: https://www.douban.com/people/yourname/ || douban</span></pre></td></tr></table></figure><p>把对应网址的 yourname 更改为你的用户名，不需要的注释即可</p>\n<h3 id=\"评论配置\"><a class=\"anchor\" href=\"#评论配置\">#</a> 评论配置</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#你的 appid</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> mp <span class=\"token comment\"># Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># Article reading statistic</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">NoRecordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Whether to record the commenter IP</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">serverURLs</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">powerMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 新朋友</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> 主人</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> 小伙伴</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-orange)\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-aqua)\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token comment\"># - hash of master1@email.com</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\"># - hash of master2@email.com</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># - hash of friend1@email.com</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token comment\"># - hash of friend2@email.com</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>本教程使用国际版进行示范，如果你的域名已经备案请使用中国版</p>\n</div>\n<p>进入 LeanCloud<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFuY2xvdWQuYXBwLw==\"> 官网</span> 选择右上角的 console<br />\n 注册一个 LeanCloud 账号，然后创建一个项目：<br />\n<img data-src=\"https://pic.imgdb.cn/item/62087a6b2ab3f51d91467d39.jpg\" alt=\"\" /><br />\n随便起一个名字，然后创建后选择 <code>设置-&gt;应用凭证</code> ，如下图：<br />\n<img data-src=\"https://pic.imgdb.cn/item/62087af82ab3f51d9146f3a7.jpg\" alt=\"\" /><br />\n随后将 AppID 和 AppKey 填入对应项，serverURLs 填入下面 request 域名中的第一个<br />\n tagMember 中填入对应邮箱的 MD5 加密，前面一定要有小横线</p>\n<h1 id=\"创建文章\"><a class=\"anchor\" href=\"#创建文章\">#</a> 创建文章</h1>\n<h2 id=\"写作\"><a class=\"anchor\" href=\"#写作\">#</a> 写作</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npx hexo new post 标题</pre></td></tr></table></figure><p>然后再 <code>_posts</code>  目录下就会出现一个 <code>标题.md</code> , 打开后长这样：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 标题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> 日期</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这是 hexo 的文章头，使用 <code>---</code>  分隔正文，采取 yaml 格式<span class=\"spoiler\" title=\"你知道得太多了\">所以直接用 yaml 高亮的</span><br />\n <code>tags</code>  是这篇文章的标签，多个用空格分割<br />\n <code>categories</code>  是分类，可以添加在 tags 下面，格式如下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> cate1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> cate2</pre></td></tr></table></figure><div class=\"note warning\">\n<p>这样 hexo 会认为 cate2 是 cate1 的子类，而非 cate1 和 cate2 是独立两个类</p>\n</div>\n<p>具体 markdown 语法可以自行百度，写完后见下文</p>\n<h2 id=\"生成\"><a class=\"anchor\" href=\"#生成\">#</a> 生成</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npx hexo algolia <span class=\"token comment\"># 对文章进行索引 (配置了搜索组件)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>npx hexo d -g <span class=\"token comment\"># 生成静态并部署</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>npx hexo s <span class=\"token comment\"># 启动本地服务器</span></pre></td></tr></table></figure><p>这一步是进行测试，防止配置出现问题，如果无问题就可以部署了</p>\n<div class=\"note success\">\n<p>部署内容见三篇</p>\n</div>\n",
            "tags": [
                "hexo",
                "hexo"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/hexo/hexo1/",
            "url": "https://www.kaitaku.xyz/hexo/hexo1/",
            "title": "hexo教程1-开发环境搭建",
            "date_published": "2022-02-12T07:52:59.000Z",
            "content_html": "<h1 id=\"开发环境搭建\"><a class=\"anchor\" href=\"#开发环境搭建\">#</a> 开发环境搭建</h1>\n<h2 id=\"nodejs\"><a class=\"anchor\" href=\"#nodejs\">#</a> node.js</h2>\n<p>进入 node.js<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\"> 官网</span>，下载 current 版 (如下图所示)<br />\n<img data-src=\"https://pic.imgdb.cn/item/62076c302ab3f51d91723eeb.jpg\" alt=\"\" /><br />\n 随后双击安装，然后在搜索打开 Node.js command prompt<br />\n 输入以下指令安装 cnpm：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm -registry<span class=\"token operator\">=</span>https://registry.npmmirror.com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cnpm -v <span class=\"token comment\"># 验证安装是否成功</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>npm 镜像已更换域名为<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG1taXJyb3IuY29t\"> npmmirror.com</span>, 老的域名将于 2022 年 6 月 30 日下线</p>\n</div>\n<p>然后安装 hexo：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cnpm <span class=\"token function\">install</span> -g hexo-cli</pre></td></tr></table></figure><h2 id=\"安装git\"><a class=\"anchor\" href=\"#安装git\">#</a> 安装 git</h2>\n<p>先打开<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\"> git 官方网站</span>，点击右侧的 download for windows<br />\n 如果链接长时间无法下载，可以<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5mYXN0Z2l0Lm9yZy9naXQtZm9yLXdpbmRvd3MvZ2l0L3JlbGVhc2VzL2Rvd25sb2FkL3YyLjM2LjEud2luZG93cy4xL0dpdC0yLjM2LjEtNjQtYml0LmV4ZQ==\">点我</span> 跳转直链<br />\n安装时选择下列选项 (图片来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2VzL2FydGljbGUvZGV0YWlscy8xMTU2OTM4MzM=\"> CSDN</span>)<br />\n<img data-src=\"https://static.aichat.net/chat/202205/0adb0674-5cbe-4982-9c39-b6dc417adb70.png\" alt=\"image.png\" /><br />\n 这样就不需要二次添加环境变量</p>\n<h2 id=\"创建hexo文件夹\"><a class=\"anchor\" href=\"#创建hexo文件夹\">#</a> 创建 hexo 文件夹</h2>\n<p>创建一个新建文件夹，然后在文件夹内按 <span class=\"kbd\">Shift</span> + <span class=\"kbd red\">RMB</span> 打开 powershell, 输入：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npx hexo init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> 文件夹名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cnpm <span class=\"token function\">install</span></pre></td></tr></table></figure><p>文件夹结构应该是这样的：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>node_modules</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>scaffolds</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>source</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>themes</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>- .gitattributes</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- .gitignore</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- _config.landspace.yml</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>- _config.yml</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>- package.json</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>- package-lock.json</pre></td></tr></table></figure><p>打开 powershell, 执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npx hexo g</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cnpm <span class=\"token function\">install</span> hexo-server</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>npx hexo s</pre></td></tr></table></figure><p>然后打开 <code>http://localhost:4000</code> , 如果出现的界面如下，就成功了<br />\n<img data-src=\"https://pic.imgdb.cn/item/620770cc2ab3f51d9177b809.jpg\" alt=\"\" /></p>\n<h2 id=\"主题安装\"><a class=\"anchor\" href=\"#主题安装\">#</a> 主题安装</h2>\n<p>hexo 有很多主题，本文使用 <code>shoka</code>  进行示范</p>\n<div class=\"note info\">\n<p>shoka 的很多功能和配置可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">官方文档</span></p>\n</div>\n<h3 id=\"下载主题\"><a class=\"anchor\" href=\"#下载主题\">#</a> 下载主题</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cd 你的博客文件夹</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>然后安装依赖包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 卸载自带渲染器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cnpm un hexo-renderer-marked</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 安装对应的渲染器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cnpm i hexo-renderer-multi-markdown-it</pre></td></tr></table></figure><p>如果报错提示：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ERROR: Failed to download Chromium r818455<span class=\"token operator\">!</span> Set <span class=\"token string\">\"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\"</span> <span class=\"token function\">env</span> variable to skip download.</pre></td></tr></table></figure><p>可以进行如下操作：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装无核心版</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cnpm i hexo-renderer-multi-markdown-it --ignore-scripts</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 卸载不完整的 puppeteer</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cnpm un puppeteer</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 安装完整的 puppeteer</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cnpm i puppeteer <span class=\"token comment\"># 这一步会安装最新版的 puppeteer, 比渲染器高 7 个大版本左右</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 会提示安装两个依赖</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cnpm i utf-8-validate</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cnpm i bufferutil</pre></td></tr></table></figure><p>这种方法可以解决 cnpm 安装也失败的情况，但由于 <code>puppeteer</code>  版本高很多，可能会不稳定</p>\n<p>安装剩下的依赖项：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cnpm i hexo-autoprefixer</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cnpm i hexo-algoliasearch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cnpm i hexo-symbols-count-time</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cnpm i hexo-feed</pre></td></tr></table></figure><h3 id=\"配置主题\"><a class=\"anchor\" href=\"#配置主题\">#</a> 配置主题</h3>\n<p>首先把 <code>_config.landspace.yml</code>  更名为 <code>_config.shoka.yml</code> <br />\n 然后打开目录下 <code>_config.yml</code> , 加入以下内容：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr></table></figure><p>然后加入 <code>minify</code>  配置：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除 hexo-feed 用到的模板文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr></table></figure><p>然后找到如下内容，按照注释修改：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">new_post_name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title.md <span class=\"token comment\"># File name of new posts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">default_layout</span><span class=\"token punctuation\">:</span> post</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">titlecase</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Transform title into titlecase</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">external_link</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># Open external links in new tab</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> site <span class=\"token comment\"># Apply to the whole site</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">filename_case</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key atrule\">render_drafts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key atrule\">post_asset_folder</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key atrule\">relative_link</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">future</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 更改为 false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 如果不是 false 就改成 false</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token key atrule\">preprocess</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr></table></figure><p>再加上 autoprefixer 的配置：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><p>和 feed 的：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#站点关键词，用 “,” 分隔</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure><p>和搜索组件，这个需要自行获取 appid, 前往<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">官网</span>，左侧选项卡 apikey 查看对应选项，填入：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><p>之后在部署前执行 <code>hexo algolia</code>  就 OK 了</p>\n<div class=\"note info\">\n<p>开发环境搭建未完全完成，见二篇</p>\n</div>\n",
            "tags": [
                "hexo",
                "hexo"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/hexo/quic/",
            "url": "https://www.kaitaku.xyz/hexo/quic/",
            "title": "本站已全面支持QUIC和HTTP/3",
            "date_published": "2022-02-03T05:15:13.000Z",
            "content_html": "<div class=\"note danger\">\n<p>本文当做 caddy2 安装教程就行，更换服务器后 QUIC 已经炸了</p>\n</div>\n<h1 id=\"quic与http3\"><a class=\"anchor\" href=\"#quic与http3\">#</a> QUIC 与 HTTP3</h1>\n<h2 id=\"什么是quic\"><a class=\"anchor\" href=\"#什么是quic\">#</a> 什么是 QUIC</h2>\n<p>QUIC 是 Quick UDP Internet Connections 的缩写，目前分为 iQUIC 和 gQUIC 两种<br />\n QUIC 类似于在内核层实现的 TCP + TLS + HTTP/2。但 QUIC 基于 UDP, 因此绕开了对 TCP 进行改造的大量成本<br />\n QUIC 相较于 TLS+HTTP2 有几点优势：</p>\n<ul>\n<li>首次握手 1-RTT</li>\n<li>改善了 TCP 的拥塞</li>\n<li>前向纠错，减少重传</li>\n<li>连接平滑迁移，网络状态的变更不会影响连接断线</li>\n</ul>\n<p>QUIC 与 HTTP/2+TLS 的示意图：<br />\n<img data-src=\"https://static.aichat.net/chat/202203/794af7dd-2a5f-45ef-ab23-93f65b045d82.png\" alt=\"100_1.png\" /></p>\n<h2 id=\"为什么部署quic\"><a class=\"anchor\" href=\"#为什么部署quic\">#</a> 为什么部署 QUIC</h2>\n<p>本网站已经部署了 HTTP/2+TLS1.3v, 理论上可以实现 0-RTT 握手<br />\n但由于 QUIC 对<strong>弱网环境</strong>的优化所以部署了 QUIC<span class=\"spoiler\" title=\"你知道得太多了\">4 次丢 1 次的离谱传输</span><br />\n还有一个次要原因就是速度快和我个人比较喜欢新的协议<span class=\"spoiler\" title=\"你知道得太多了\">闲的</span></p>\n<p>理由写的有<span class=\"spoiler\" title=\"你知道得太多了\">亿</span>点多，进入正题</p>\n<h2 id=\"quic部署\"><a class=\"anchor\" href=\"#quic部署\">#</a> QUIC 部署</h2>\n<div class=\"note info\">\n<p>本站为纯静态网站且近期才开始部署，所以使用方案较为激进</p>\n</div>\n<p>本站直接使用 <code>caddy</code>  进行 web 服务，并没有使用 nginx+caddy 的方案</p>\n<h3 id=\"安装caddy\"><a class=\"anchor\" href=\"#安装caddy\">#</a> 安装 caddy</h3>\n<div class=\"note info\">\n<p>caddy 仅支持 iQUIC 的最新草案，支持 gQUIC 请使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGl0ZXNwZWVkdGVjaC5jb20v\">litespeed</span></p>\n</div>\n<p>本文针对于 ubuntu 系统，其他系统见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYWRkeXNlcnZlci5jb20vZG9jcy9pbnN0YWxs\"> caddy 官网</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> -y debian-keyring debian-archive-keyring apt-transport-https</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> -1sLf <span class=\"token string\">'https://dl.cloudsmith.io/public/caddy/stable/gpg.key'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/trusted.gpg.d/caddy-stable.asc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">curl</span> -1sLf <span class=\"token string\">'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/caddy-stable.list</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> caddy</pre></td></tr></table></figure><p>执行上述命令即可安装 caddy</p>\n<h3 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/caddy/Caddyfile</pre></td></tr></table></figure><p>创建一个 <code>caddyfile</code>  然后写入以下内容：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    servers &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        protocol &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            experimental_http3</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>然后在这段的<strong>下面</strong>写入：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>你的域名：443 &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    root * &#x2F; 你的网站根目录</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    encode zstd gzip # 开启 gzip 功能</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    tls mail@mail.com # 你的邮件，用于申请 ssl 证书</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    file_server</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>域名后的 <code>:443</code>  不带空格，空格是代码自动处理的错误<br />\n如果你自带证书，可以将 tls 后写成这样：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tls key pem # 先是 key 文件，然后 pem 证书</pre></td></tr></table></figure><p>再在域名这个块内插入以下内容：</p>\n<div class=\"note info\">\n<p>可以不插入试一下，如果可以就无须插入</p>\n</div>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>header &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    alt-svc h3&#x3D;&quot;:443&quot;, ma&#x3D;2592000</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>然后执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> caddy run -config<span class=\"token operator\">=</span>/etc/caddy/Caddyfile <span class=\"token comment\"># 你的配置文件路径</span></pre></td></tr></table></figure><p>如果没有错误，就成功了</p>\n<h3 id=\"验证quic\"><a class=\"anchor\" href=\"#验证quic\">#</a> 验证 QUIC</h3>\n<p><strong>2022/2/6 更新</strong><br />\n今天打开网页，发现 HTTP/2 and SPDY indicator 插件变成了绿色：<br />\n打开开发者工具查看：<br />\n发现几乎全部为 <code>http/3</code>  协议，安全页也由 <code>TLS1.3</code>  变成了 <code>QUIC</code> <br />\n 后来发现是最开始没有打开 UDP443 端口导致 QUIC 握手一直失败，触发了浏览器的冷却期<br />\n直到今天才结束，使用了 QUIC 握手<br />\n ubuntu 放行 <code>443/udp</code>  端口：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">443</span>/udp</pre></td></tr></table></figure>",
            "tags": [
                "hexo",
                "hexo"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/easy/pythone9p/",
            "url": "https://www.kaitaku.xyz/python/easy/pythone9p/",
            "title": "python基础篇9plus-第三方库",
            "date_published": "2022-01-29T11:49:46.000Z",
            "content_html": "<h1 id=\"安装第三方库\"><a class=\"anchor\" href=\"#安装第三方库\">#</a> 安装第三方库</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>首先在 PowerShell 执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip -V</pre></td></tr></table></figure><p>如果返回值类似这样：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip 21.2.4 from C:\\Users\\ 你的用户名 \\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pip (python 3.10)</pre></td></tr></table></figure><p>那证明 python 安装无误，如果出现 <code>无法将“pip”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确 ，然后再试一次。</code>  <br />\n请重新安装 python 或将 pip 添加到 path 中 \\</p>\n<div class=\"note info\">\n<p>安装 python 时务必勾选 ADD PYTHON3.10 TO PATH <br />\n添加环境变量可自行百度</p>\n</div>\n<p>可以安装一个 numpy 试一下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> numpy</pre></td></tr></table></figure><p>出现 <code>Collecting numpy</code>  则代表安装已经开始<br />\n然后就会发现：这玩意的下载速度慢的离谱<span class=\"spoiler\" title=\"你知道得太多了\">堪比百毒网盘</span><br />\n如何加速它是下一节的内容，先看一下安装完成后<span class=\"spoiler\" title=\"你知道得太多了\">可能需要 10 分钟左右</span></p>\n<div class=\"note info\">\n<p>出现 Successfully installed ... 就是安装完成</p>\n</div>\n<p>如果出现：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>You should consider upgrading via the &#39;C:\\Users\\zkz20\\AppData\\Local\\Programs\\Python\\Python310\\python.exe -m pip install --upgrade pip&#39; command.</pre></td></tr></table></figure><p>则代表你的 pip 版本较低，可以使用提示中的代码升级，但在 win10 部分版本只要命令中有 <code>python</code>  就会跳转到 Microsoft Store<br />\n 所以可以试一下另一种办法：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> --user -U pip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 以下为说明</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># --user 代表使用用户级权限 (一般为标准管理员)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># -U 代表下载最新的版本 (不然会不更新)</span></pre></td></tr></table></figure><div class=\"note warning\">\n<p>如果你的系统输入 python 后不会跳转，请使用 <code>python -m pip install --upgrade pip</code> <br />\n 这种使用 pip 直接安装 pip 的方法仅为应急之举</p>\n</div>\n<h2 id=\"加速\"><a class=\"anchor\" href=\"#加速\">#</a> 加速</h2>\n<p>刚刚就发现了 pip 下载很慢，这是因为它会从国外的 Pypi 进行索引<br />\n然后从 github 进行下载，在国内会导致无法下载或速度近乎为零<br />\n但阿里提供了 pypi 和 &quot;轮子&quot; 的镜像源，可以使用它进行加速 <br />\n首先在资源管理器内进入 <code>C:\\用户(users)\\你的用户名\\pip</code> <br />\n 如果没有 pip 文件夹就新建一个，然后在文件夹内新建 <code>pip.ini</code>  (新建文本文档然后更改后缀名即可)<br />\n 然后写入以下内容：</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">global</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">index-url</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">https://pypi.tuna.tsinghua.edu.cn/simple</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">install</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">trusted-host</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mirrors.aliyun.com</span></pre></td></tr></table></figure><p>随后保存，重启电脑，再进行安装，速度就上来了</p>\n<h1 id=\"创建自己的python包\"><a class=\"anchor\" href=\"#创建自己的python包\">#</a> 创建自己的 python 包</h1>\n<h2 id=\"创建一个python包\"><a class=\"anchor\" href=\"#创建一个python包\">#</a> 创建一个 python 包</h2>\n<p>使用 pycharm 可以快速创建一个 python 包:<br />\n<img data-src=\"https://static.aichat.net/chat/202206/73d859fe-d29f-4039-8f05-5544d086fb9d.png\" alt=\"image.png\" /></p>\n<div class=\"note info\">\n<p>测试包名为 test,<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1kZW1vLXVoNWZ6MmJuNzZoLnB5\"> 文件为 demo.py</span>, 内容如下:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div>\n<p>如果没有 pycharm 也可以手动创建文件夹，然后创建一个 <code>__init__.py</code> <br />\n 这个文件中通常不包含代码，仅包含以下两部分内容:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>此包的描述(可选)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> xxx <span class=\"token comment\"># 需要带上对应模块名调用，例如 test.demo.hello ()</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> xxx <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token comment\"># 不需要带上模块名，例如 test.hello ()</span></pre></td></tr></table></figure><h2 id=\"打包python包\"><a class=\"anchor\" href=\"#打包python包\">#</a> 打包 python 包</h2>\n<p>先运行以下命令，确保 setuptools 和 wheel 安装正常:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> --user --upgrade setuptools wheel</pre></td></tr></table></figure><p>在包目录下，新建 <code>setup.py</code> , 内容如下 (可参照注释更改):</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> setuptools</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>setuptools<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    name<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 软件包发布名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 版本号</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    author<span class=\"token operator\">=</span><span class=\"token string\">\"kaitaku\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 作者名</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    author_email<span class=\"token operator\">=</span><span class=\"token string\">\"test@kaitaku.xyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 作者邮箱</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    description<span class=\"token operator\">=</span><span class=\"token string\">\"这里应该是一段描述\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的短描述</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    long_description<span class=\"token operator\">=</span><span class=\"token string\">\"这里应该是一段长描述\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 完整描述</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    long_description_content_type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 完整描述文本类型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    url<span class=\"token operator\">=</span><span class=\"token string\">\"https://www.kaitaku.xyz\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的网站主页</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    packages<span class=\"token operator\">=</span>setuptools<span class=\"token punctuation\">.</span>find_packages<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 自动补全依赖</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    classifiers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">\"Programming Language :: Python :: 3\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 包所用语言、版本</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">\"License :: OSI Approved :: MIT License\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的开源许可证</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">\"Operating System :: OS Independent\"</span>  <span class=\"token comment\"># 包的操作系统</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后打开终端，在对应文件夹下输入下列命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python3 setup.py sdist bdist_wheel</pre></td></tr></table></figure><p>当出现 <code>removing 'test-1.0.0' (and everything under it)</code>  时，你的包就创建好了<br />\n它应该在对应文件夹的 <code>dist/&lt;packageName&gt;-&lt;packageVersion&gt;.tar.gz</code>  这个位置</p>\n<div class=\"note info\">\n<p>还有一个 whl 结尾的文件，这是安装和发布时会用到的</p>\n</div>\n<p>输入如下命令安装它:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> dist/test-1.0.0.tar.gz</pre></td></tr></table></figure><p>随后应该会出现 <code>Successfully installed test-1.0.0</code> , 此时，你的包就安装完毕了<br />\n现在你可以直接 <code>import test</code> , 删除也很简单，和标准 pip 包一样</p>\n<h2 id=\"发布你的python包\"><a class=\"anchor\" href=\"#发布你的python包\">#</a> 发布你的 python 包</h2>\n<p>现在你应该已经创建了一个 python 包，现在可以把它发布到 pypi 上了 \\</p>\n<div class=\"note info\">\n<p>pypi 就是 <code>Python Package Index</code> , 所有 python 第三方包的索引</p>\n</div>\n<p>前往<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLm9yZy9hY2NvdW50L3JlZ2lzdGVyLw==\"> pypi</span> 注册一个账号<br />\n然后创建 <code>README.rst</code>  和 <code>LICENSE.txt</code> , 内容如下:</p>\n<ul>\n<li><code>README.rst</code>  就是你的 python 包的长描述，遵循<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXN0LXNwaGlueC1tZW1vLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9SZVNULmh0bWw=\"> markup</span> 语法</li>\n<li><code>LICENSE.txt</code>  就是你的包的许可证内容，一般有 MIT、BSD、GPL 等</li>\n</ul>\n<p>然后更改一下 setup.py 的内容:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> setuptools</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"README.rst\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    longDescription <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>setuptools<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    name<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 软件包发布名</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 版本号</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    author<span class=\"token operator\">=</span><span class=\"token string\">\"kaitaku\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 作者名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    author_email<span class=\"token operator\">=</span><span class=\"token string\">\"test@kaitaku.xyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 作者邮箱</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    description<span class=\"token operator\">=</span><span class=\"token string\">\"这里应该是一段描述\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的短描述</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    long_description<span class=\"token operator\">=</span>longDescription<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 完整描述</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    url<span class=\"token operator\">=</span><span class=\"token string\">\"https://www.kaitaku.xyz\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的网站主页</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    packages<span class=\"token operator\">=</span>setuptools<span class=\"token punctuation\">.</span>find_packages<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 自动补全依赖</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    classifiers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">\"Programming Language :: Python :: 3\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 包所用语言、版本</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">\"License :: OSI Approved :: MIT License\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 包的开源许可证</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">\"Operating System :: OS Independent\"</span>  <span class=\"token comment\"># 包的操作系统</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后安装 <code>twine</code>  包:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> twine</pre></td></tr></table></figure><p>然后执行下列命令上传库:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>twine upload dist/*</pre></td></tr></table></figure><p>然后会要求输入你的 pypi 账号密码，直接输入后等待上传即可<br />\n现在，你可以用 pip 命令安装你的 python 包了</p>\n",
            "tags": [
                "python",
                "基础篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/easy/pythone9/",
            "url": "https://www.kaitaku.xyz/python/easy/pythone9/",
            "title": "python基础篇9-面向对象与异常捕获",
            "date_published": "2022-01-29T03:22:22.000Z",
            "content_html": "<h1 id=\"面向对象\"><a class=\"anchor\" href=\"#面向对象\">#</a> 面向对象</h1>\n<h2 id=\"类方法和静态方法\"><a class=\"anchor\" href=\"#类方法和静态方法\">#</a> 类方法和静态方法</h2>\n<h3 id=\"类方法\"><a class=\"anchor\" href=\"#类方法\">#</a> 类方法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    variety <span class=\"token operator\">=</span> <span class=\"token string\">\"柴犬\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">show_variety</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"这个类下所有对象都是</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cls<span class=\"token punctuation\">.</span>variety<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">是一只狗\"</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>dog <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>dog<span class=\"token punctuation\">.</span>show_variety<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>variety</code>  是类变量，通过这个类实例化的所有对象都有这个变量<br />\n在方法前加上 <code>@classmethod</code>  来声明这是一个类方法<br />\n类方法的首位参数应为 <code>cls</code> , 代表调用的对象的类 / 类</p>\n<div class=\"note info\">\n<p>首位参数可以是任何合法的形参名，但一般使用 <code>self</code>  和 <code>cls</code></p>\n</div>\n<h3 id=\"静态方法\"><a class=\"anchor\" href=\"#静态方法\">#</a> 静态方法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是一个静态方法\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">是一只狗\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>dog <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>dog<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>静态方法没有特殊参数，所以和类外函数基本一致</p>\n<div class=\"note info\">\n<p>静态方法可以传入参数</p>\n</div>\n<h3 id=\"魔法方法\"><a class=\"anchor\" href=\"#魔法方法\">#</a> 魔法方法</h3>\n<p>魔法方法指 class 内的部分特殊方法，通常以双下划线开头结尾<br />\n例如 <code>__init__</code> 就是初始化类时执行的方法<br />\n <code>__str__</code> 就是输出时执行的方法<br />\n可以看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvemgtY24vMy90dXRvcmlhbC9jbGFzc2VzLmh0bWwjcHl0aG9uLXNjb3Blcy1hbmQtbmFtZXNwYWNlcw==\">官方文档</span></p>\n<h2 id=\"继承\"><a class=\"anchor\" href=\"#继承\">#</a> 继承</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">是一只狗\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Huskies</span><span class=\"token punctuation\">(</span>Dog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>variety <span class=\"token operator\">=</span> <span class=\"token string\">\"哈士奇\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">正在吃\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">正在睡\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">是一只哈士奇\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在这个例子中， <code>Huskies</code>  是 <code>Dog</code>  的派生类 (子类), <code>Dog</code>  是 <code>Huskies</code>  的父类 (基类)<br />\n Huskies 类重写了实例化和输出方法，Huskies 类拥有所有 Dog 类的方法和变量<br />\n子类语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">name</span><span class=\"token punctuation\">(</span>父类<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    语句</pre></td></tr></table></figure><p>有时候会有这样的语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><p><code>object</code>  是所有 python 类的基类，在 python2 时必须要写入，但 python3 不需要这样写</p>\n<h2 id=\"超类\"><a class=\"anchor\" href=\"#超类\">#</a> 超类</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    self<span class=\"token punctuation\">.</span>variety <span class=\"token operator\">=</span> <span class=\"token string\">\"哈士奇\"</span></pre></td></tr></table></figure><p>这是 Huskies 类的实例化方法，里面的 <code>super()</code>  就是超类<br />\n <code>super()</code>  在 Huskies 类内代表 Dog 类，也可以使用 <code>Dog.__init__()</code>  来代替超类</p>\n<h1 id=\"异常处理\"><a class=\"anchor\" href=\"#异常处理\">#</a> 异常处理</h1>\n<h2 id=\"抛出异常\"><a class=\"anchor\" href=\"#抛出异常\">#</a> 抛出异常</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入1或0:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> u<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"一个错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输入 1 就会抛出 ValueError 错误，因为使用了 <code>raise</code>  关键字<br />\n语法： <code>raise 错误</code> <br />\n但这个代码还可以简化：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入1或0:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> u</pre></td></tr></table></figure><p><code>assert</code>  关键字在后面的变量为非时会返回 <code>AssertionError</code> <br />\nassert 不可以选择返回错误</p>\n<h2 id=\"异常捕获\"><a class=\"anchor\" href=\"#异常捕获\">#</a> 异常捕获</h2>\n<h3 id=\"捕获语法\"><a class=\"anchor\" href=\"#捕获语法\">#</a> 捕获语法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    u1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    u2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    a <span class=\"token operator\">=</span> u1<span class=\"token operator\">/</span>u2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触发了除零错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"触发了数值错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"触发了</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有没有错我都输出\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>try</code>  关键字后的代码块会被<strong>尝试执行</strong>，如果触发错误便会寻找 <code>except</code>  子句 <br />\nexecpt 语法： <code>except 异常:</code> <br />\n 如果没有触发错误，就会寻找 <code>else</code>  子句，没有 else 子句就会继续执行<br />\n如果有 <code>finally</code>  子句，就会执行，无论是否触发错误<br />\n <code>execpt Exception as e</code>  就是在处理未知错误，这里的 e 就是错误的临时变量</p>\n<div class=\"note danger\">\n<p>如果在 try 代码块内触发异常，将会直接跳出代码块，处理后下面需要使用 try 内定义的变量<br />\n可能导致未定义错误</p>\n</div>\n<h3 id=\"捕获的特殊情况\"><a class=\"anchor\" href=\"#捕获的特殊情况\">#</a> 捕获的特殊情况</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception</pre></td></tr></table></figure><p>这是一段<span class=\"spoiler\" title=\"你知道得太多了\">离谱的</span>代码，如果执行，就会出现这样一串字：<br />\n <code>During handling of the above exception, another exception occurred:</code>  <br />\n这行字代表在处理 try 内错误时，except 或 finally 内有 <code>raise</code>  子句或抛出了其他错误</p>\n<div class=\"note warning\">\n<p>except 子句内有 raise 且被触发会导致错误无法正常处理，上面的代码也会抛出 <code>ZeroDivisionError: division by zero</code></p>\n</div>\n<h2 id=\"定义异常\"><a class=\"anchor\" href=\"#定义异常\">#</a> 定义异常</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><p>这是一个最简单的异常类，但我们可以给它加上一个实例化函数：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>value</pre></td></tr></table></figure><p>现在就可以自定义异常输出了</p>\n<h1 id=\"练习题\"><a class=\"anchor\" href=\"#练习题\">#</a> 练习题</h1>\n<p>用 <code>whlie</code>  和 <code>try...except...</code>  子句来实现 for 循环遍历迭代和生成器的功能<br />\n输出 next 返回值即可</p>\n<div class=\"note info\">\n<p>超出迭代器序列是 StopIteration 错误</p>\n</div>\n<p>这是数据：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>答案：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        temp <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">下一篇是 9plus, 关于第三方库</span></p>\n",
            "tags": [
                "python",
                "基础篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/python/easy/pythone8/",
            "url": "https://www.kaitaku.xyz/python/easy/pythone8/",
            "title": "python基础篇8-面向对象和生成器、迭代器",
            "date_published": "2022-01-27T11:54:36.000Z",
            "content_html": "<h1 id=\"面向对象基础\"><a class=\"anchor\" href=\"#面向对象基础\">#</a> 面向对象基础</h1>\n<h2 id=\"建立一个类\"><a class=\"anchor\" href=\"#建立一个类\">#</a> 建立一个类</h2>\n<h3 id=\"类的基本语法\"><a class=\"anchor\" href=\"#类的基本语法\">#</a> 类的基本语法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TestClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是init方法\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这是一个最基本的类，有 <code>__init__方法</code></p>\n<div class=\"note info\">\n<p>类名必须使用<strong>大驼峰命名法</strong>，即所有的单词首字母大写</p>\n</div>\n<p>类的基本语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> 类名<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    函数</pre></td></tr></table></figure><h3 id=\"对象函数\"><a class=\"anchor\" href=\"#对象函数\">#</a> 对象函数</h3>\n<p>在 python 中，像 <code>__init__</code> 这样前后都有双下划线的叫<strong>魔法方法</strong><br />\n例如 <code>__init__</code> 就是在方法实例化时调用<br />\n一般来说，实例化方法用于建立变量，举个栗子：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TestClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实例化完成\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这样实例就有了 value 变量，类内可以通过 <code>self.value调用</code> ，类外使用 <code>实例名.value</code>  访问 <br />\n定义一个非魔法对象方法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> 函数名<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>参数<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    语句</pre></td></tr></table></figure><p><code>self</code>  就是调用对象，可以使用 self 调用类内方法或变量</p>\n<div class=\"note info\">\n<p>类内直接写代码会直接执行，必须使用函数括起来</p>\n</div>\n<h2 id=\"实例化\"><a class=\"anchor\" href=\"#实例化\">#</a> 实例化</h2>\n<p>写个狗的类<span class=\"spoiler\" title=\"你知道得太多了\">只会吃和睡就离谱</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">正在吃\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">正在睡\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">是一只狗\"</span></span></pre></td></tr></table></figure><p>然后实例化 Dog 类</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>doge <span class=\"token operator\">=</span> Dog<span class=\"token punctuation\">(</span><span class=\"token string\">\"doge\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>doge<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>doge<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>doge<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 输出:doge 正在吃</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># doge 正在睡</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># doge 是一只狗</span></pre></td></tr></table></figure><p>实例化语法 <code>变量 = 类名(参数)</code> <br />\n <code>doge.eat()</code>  就是调用了对象方法 <code>eat()</code> <br />\n 方法内使用了 <code>self.name</code>  作为名字<br />\n <code>print(doge)</code>  是调用了对象的 <code>__str__</code> 方法</p>\n<div class=\"note info\">\n<p>__str__必须<strong>返回</strong>一个<strong>字符串</strong></p>\n</div>\n<div class=\"note info\">\n<p>面向对象大部分会在第 9 篇讲，这一段就是基础中的基础</p>\n</div>\n<h1 id=\"迭代器和生成器\"><a class=\"anchor\" href=\"#迭代器和生成器\">#</a> 迭代器和生成器</h1>\n<h2 id=\"迭代器\"><a class=\"anchor\" href=\"#迭代器\">#</a> 迭代器</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iter1 <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 或 list1.__iter__()</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>iter1<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 或 next (iter1)</span></pre></td></tr></table></figure><p>对可迭代对象执行 <code>iter()</code>  操作，就可以得到一个迭代器<br />\n对迭代器执行 <code>next()</code>  方法，就会让指针前进一项并返回<br />\n在指针超出范围后，会返回 <code>StopIteration</code>  错误<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2022/01/a44611ae0b34b837.png\" alt=\"一个示意图\" /><br />\n迭代器非常省内存，比如一个有一千万个整数的列表，使用列表会占用 100MB 左右，而迭代器只有 50B 左右<br />\n因为迭代器是<strong>惰性</strong>的，执行前不会访问<br />\n可以使用 for 循环来快速访问迭代器：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"生成器\"><a class=\"anchor\" href=\"#生成器\">#</a> 生成器</h2>\n<h3 id=\"生成器函数\"><a class=\"anchor\" href=\"#生成器函数\">#</a> 生成器函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">yield</span> a</pre></td></tr></table></figure><p>这是一个生成斐波那契数列的函数，尝试直接 print 它：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fibonacci<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>返回： <code>&lt;generator object fibonacci at 0x0000022C97099B60&gt;</code> <br />\n 实际上这个函数已经变成了生成器，可以使用 for 或 next 来获取返回值<br />\n生成器的语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> 函数名<span class=\"token punctuation\">(</span>参数<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    语句</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">yield</span> 返回值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    语句</pre></td></tr></table></figure><p>与 return 不同，函数遇到 yield 后不会退出，在返回值后继续执行下面的代码<br />\n所以可以有多个 yield, 返回值格式如下：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>值 1 值 2 值 3 值 1 值 2 值 3...</pre></td></tr></table></figure>",
            "tags": [
                "python",
                "基础篇",
                "python"
            ]
        }
    ]
}