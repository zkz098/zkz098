{
    "version": "https://jsonfeed.org/version/1",
    "title": "Yume shoka",
    "subtitle": "kaitakuの博客",
    "icon": "https://www.kaitaku.xyz/images/favicon.ico",
    "description": "",
    "home_page_url": "https://www.kaitaku.xyz",
    "items": [
        {
            "id": "https://www.kaitaku.xyz/2022/01/11/pythone2/",
            "url": "https://www.kaitaku.xyz/2022/01/11/pythone2/",
            "title": "python教程-小白篇2",
            "date_published": "2022-01-11T08:24:23.000Z",
            "content_html": "<h1 id=\"输出一段文字\"><a class=\"anchor\" href=\"#输出一段文字\">#</a> 输出一段文字</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>PyCharm</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>print 为输出函数，会将括号内的值输出 <br />\n&quot;hello world&quot; 为传入的值，类型为字符串 <br />\n字符串内可以存储绝大部分文本 <br />\npython 的字符串可以用双引号或单引号括起来<br />\n行末不需要分号或逗号，但这样也可以:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>PyCharm</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"python中的变量\"><a class=\"anchor\" href=\"#python中的变量\">#</a> python 中的变量</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>PyCharm</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"This is a word\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 输出值为: This is a word</span></pre></td></tr></table></figure><p>在本段代码中 &quot;a&quot; 即为变量 <br />\npython 中的变量不需要提前声明类型，需要时定义即可 <br />\n赋值语法：变量名 = 值 <br />\n变量名规则：</p>\n<ul>\n<li>不可以以数字开头，例如 5count 就是错误的</li>\n<li>只能有字母、数字和下划线，例如 a#b 就是错误的</li>\n<li>不可以以关键字开头，例如 import = 0 就是错误的</li>\n<li>最好不要与函数重名，例如:</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>Pycharm</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 返回错误：TypeError: 'int' object is not callable</span></pre></td></tr></table></figure><p>python 的数据类型是可变的，但部分类型无法互相转换 (见 3 部分) <br />\n因此，这样的代码是合法的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>Pycharm</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">2.25</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 输出值为 2.25</span></pre></td></tr></table></figure><h1 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h1>\n<h2 id=\"基本数据类型\"><a class=\"anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">转换函数</th>\n<th style=\"text-align:center\">用法</th>\n<th style=\"text-align:center\">举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">int()</td>\n<td style=\"text-align:center\">储存整数</td>\n<td style=\"text-align:center\">114514</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">float</td>\n<td style=\"text-align:center\">float()</td>\n<td style=\"text-align:center\">储存小数</td>\n<td style=\"text-align:center\">810.1919</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bool</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">储存真假值</td>\n<td style=\"text-align:center\">True/False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str</td>\n<td style=\"text-align:center\">str()</td>\n<td style=\"text-align:center\">储存字符串</td>\n<td style=\"text-align:center\">&quot;python&quot;</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"容器数据类型\"><a class=\"anchor\" href=\"#容器数据类型\">#</a> 容器数据类型</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">定义方法</th>\n<th style=\"text-align:center\">转换方法</th>\n<th style=\"text-align:center\">举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">list</td>\n<td style=\"text-align:center\">[列表] 或 list ()</td>\n<td style=\"text-align:center\">list()</td>\n<td style=\"text-align:center\">[1,2,3,4]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple</td>\n<td style=\"text-align:center\">(列表) 或 tuple ()</td>\n<td style=\"text-align:center\">tuple()</td>\n<td style=\"text-align:center\">(1,2,3,4)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dict</td>\n<td style=\"text-align:center\">{键：值} 或 dict ()</td>\n<td style=\"text-align:center\">dict()</td>\n<td style=\"text-align:center\">由于 MD 无法显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">set</td>\n<td style=\"text-align:center\">{值} 或 set ()</td>\n<td style=\"text-align:center\">set()</td>\n<td style=\"text-align:center\">由于 MD 无法显示</td>\n</tr>\n</tbody>\n</table>\n<p>数据类型会专门开一篇<span class=\"spoiler\" title=\"你知道得太多了\">字太多了</span></p>\n<h1 id=\"输入和类型\"><a class=\"anchor\" href=\"#输入和类型\">#</a> 输入和类型</h1>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入字符串:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>input () 方法可以实现控制台输入 <br />\n括号内的内容为输入提示语 \\</p>\n<div class=\"note info\">\n<p>input 方法输入的始终为字符串，需要进行类型转换</p>\n</div>\n<h2 id=\"类型判断\"><a class=\"anchor\" href=\"#类型判断\">#</a> 类型判断</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;class:'int'></span></pre></td></tr></table></figure><p>type 方法可以返回变量的类型</p>\n<div class=\"note info\">\n<p>type 方法输出的和返回的并不一致，返回的是类名，见下列代码</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 输出 yes</span></pre></td></tr></table></figure><p>第三篇是分支结构<span class=\"spoiler\" title=\"你知道得太多了\"> x 年后更新</span></p>\n",
            "tags": [
                "python",
                "小白篇",
                "python"
            ]
        },
        {
            "id": "https://www.kaitaku.xyz/2022/01/10/pythone1/",
            "url": "https://www.kaitaku.xyz/2022/01/10/pythone1/",
            "title": "python教程-小白篇1",
            "date_published": "2022-01-10T11:26:33.000Z",
            "content_html": "<h1 id=\"步骤1安装python解释器\"><a class=\"anchor\" href=\"#步骤1安装python解释器\">#</a> 步骤 1. 安装 python 解释器</h1>\n<p>前往 python 官网:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=\"> 点我直达</span><br />\n选择 Download,All releases,3.10.1 <br />\n请使用 IDM 系多线程下载器<br />\n<span class=\"spoiler\" title=\"你知道得太多了\">不使用也能在 3022 年前下载完</span><br />\n<img data-src=\"https://s2.loli.net/2022/01/10/NXaQOKqzLld9h4E.png\" alt=\"step1.png\" /><br />\n 在此界面中勾选 Add Python 3.10 to PATH <br />\n按下 Install Now 安装，完成后按 Close</p>\n<h1 id=\"步骤2安装pycharm\"><a class=\"anchor\" href=\"#步骤2安装pycharm\">#</a> 步骤 2. 安装 pycharm</h1>\n<p>前往 jetbrains 官网:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS96aC1jbi9weWNoYXJtLw==\"> 点我直达</span><br />\n<span class=\"spoiler\" title=\"你知道得太多了\">中文界面还看不懂？</span><br />\n<img data-src=\"https://s2.loli.net/2022/01/10/K5qrbPf9NOZLTyw.png\" alt=\"step2.png\" /><br />\n 选择社区版进行安装 <br />\n安装过程就不说了 (应该能看懂)</p>\n<h1 id=\"步骤3配置pycharm\"><a class=\"anchor\" href=\"#步骤3配置pycharm\">#</a> 步骤 3. 配置 pycharm</h1>\n<p><img data-src=\"https://s2.loli.net/2022/01/10/gbm3Dn2CO8LjUEa.jpg\" alt=\"step3.jpg\" /><br />\n 单击设置 (位置相同，但应该是英文)<br />\n<img data-src=\"https://s2.loli.net/2022/01/10/PLgQeUV35nYWpsF.jpg\" alt=\"step4.jpg\" /><br />\n 选择左侧选项，搜索 Chi, 选择左侧插件安装，重启 Pycharm</p>\n<h1 id=\"步骤4创建新项目\"><a class=\"anchor\" href=\"#步骤4创建新项目\">#</a> 步骤 4. 创建新项目</h1>\n<p><img data-src=\"https://s2.loli.net/2022/01/10/gwzUaXv4WdMY8mP.png\" alt=\"无标题.png\" /><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 应该看图就能懂</span><br />\n<img data-src=\"https://s2.loli.net/2022/01/10/XGQxLtjckfCI3ao.png\" alt=\"无标题.png\" /><br />\n 创建新文件 (文件名不要使用 abc)</p>\n<p>正经的编程内容请见二篇</p>\n",
            "tags": [
                "python",
                "小白篇",
                "python"
            ]
        }
    ]
}